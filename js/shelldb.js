// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.ShellDB');
goog.provide('proto.ei.ShellDB.ChickenConfig');
goog.provide('proto.ei.ShellDB.FarmConfiguration');
goog.provide('proto.ei.ShellDB.FarmElement');
goog.provide('proto.ei.ShellDB.ShellConfiguration');
goog.provide('proto.ei.ShellDB.ShellElementStatus');
goog.provide('proto.ei.ShellDB.ShellGroupConfiguration');
goog.provide('proto.ei.ShellDB.ShellSetConfiguration');
goog.provide('proto.ei.ShellDB.ShellSetVariationStatus');
goog.provide('proto.ei.ShellDB.ShellStatus');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.ei.ShellSpec.AssetType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellDB.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellDB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.displayName = 'proto.ei.ShellDB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellStatus.displayName = 'proto.ei.ShellDB.ShellStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellElementStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellElementStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellElementStatus.displayName = 'proto.ei.ShellDB.ShellElementStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellSetVariationStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellDB.ShellSetVariationStatus.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellDB.ShellSetVariationStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellSetVariationStatus.displayName = 'proto.ei.ShellDB.ShellSetVariationStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.FarmConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellDB.FarmConfiguration.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellDB.FarmConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.FarmConfiguration.displayName = 'proto.ei.ShellDB.FarmConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellConfiguration.displayName = 'proto.ei.ShellDB.ShellConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellSetConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellSetConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellSetConfiguration.displayName = 'proto.ei.ShellDB.ShellSetConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellGroupConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellGroupConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellGroupConfiguration.displayName = 'proto.ei.ShellDB.ShellGroupConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ChickenConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ChickenConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ChickenConfig.displayName = 'proto.ei.ShellDB.ChickenConfig';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellDB.repeatedFields_ = [1,5,8,2,4,3,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.toObject = function(includeInstance, msg) {
  var f, obj = {
    shellInventoryList: jspb.Message.toObjectList(msg.getShellInventoryList(),
    proto.ei.ShellDB.ShellStatus.toObject, includeInstance),
    shellElementInventoryList: jspb.Message.toObjectList(msg.getShellElementInventoryList(),
    proto.ei.ShellDB.ShellElementStatus.toObject, includeInstance),
    shellVariationInventoryList: jspb.Message.toObjectList(msg.getShellVariationInventoryList(),
    proto.ei.ShellDB.ShellSetVariationStatus.toObject, includeInstance),
    shellSetInventoryList: jspb.Message.toObjectList(msg.getShellSetInventoryList(),
    proto.ei.ShellDB.ShellStatus.toObject, includeInstance),
    shellObjectInventoryList: jspb.Message.toObjectList(msg.getShellObjectInventoryList(),
    proto.ei.ShellDB.ShellStatus.toObject, includeInstance),
    farmConfigsList: jspb.Message.toObjectList(msg.getFarmConfigsList(),
    proto.ei.ShellDB.FarmConfiguration.toObject, includeInstance),
    newShellsDownloadedList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    newShellsSeenList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB}
 */
proto.ei.ShellDB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB;
  return proto.ei.ShellDB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB}
 */
proto.ei.ShellDB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ShellDB.ShellStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader);
      msg.addShellInventory(value);
      break;
    case 5:
      var value = new proto.ei.ShellDB.ShellElementStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellElementStatus.deserializeBinaryFromReader);
      msg.addShellElementInventory(value);
      break;
    case 8:
      var value = new proto.ei.ShellDB.ShellSetVariationStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellSetVariationStatus.deserializeBinaryFromReader);
      msg.addShellVariationInventory(value);
      break;
    case 2:
      var value = new proto.ei.ShellDB.ShellStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader);
      msg.addShellSetInventory(value);
      break;
    case 4:
      var value = new proto.ei.ShellDB.ShellStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader);
      msg.addShellObjectInventory(value);
      break;
    case 3:
      var value = new proto.ei.ShellDB.FarmConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader);
      msg.addFarmConfigs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addNewShellsDownloaded(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addNewShellsSeen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShellInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter
    );
  }
  f = message.getShellElementInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ei.ShellDB.ShellElementStatus.serializeBinaryToWriter
    );
  }
  f = message.getShellVariationInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ShellDB.ShellSetVariationStatus.serializeBinaryToWriter
    );
  }
  f = message.getShellSetInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter
    );
  }
  f = message.getShellObjectInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter
    );
  }
  f = message.getFarmConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getNewShellsDownloadedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getNewShellsSeenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ShellDB.FarmElement = {
  HEN_HOUSE: 1,
  SILO: 2,
  MAILBOX: 3,
  TROPHY_CASE: 4,
  GROUND: 5,
  HARDSCAPE: 6,
  HYPERLOOP: 7,
  DEPOT: 8,
  LAB: 9,
  HATCHERY: 10,
  HOA: 11,
  MISSION_CONTROL: 12,
  FUEL_TANK: 13,
  CHICKEN: 14,
  HAT: 15,
  UNKNOWN: 99
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    owned: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.ShellStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellStatus;
  return proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOwned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellDB.ShellStatus.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool owned = 2;
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.getOwned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.setOwned = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.clearOwned = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.hasOwned = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellElementStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellElementStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellElementStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    element: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    setIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellElementStatus}
 */
proto.ei.ShellDB.ShellElementStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellElementStatus;
  return proto.ei.ShellDB.ShellElementStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellElementStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellElementStatus}
 */
proto.ei.ShellDB.ShellElementStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellDB.FarmElement} */ (reader.readEnum());
      msg.setElement(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellElementStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellElementStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellElementStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional FarmElement element = 1;
 * @return {!proto.ei.ShellDB.FarmElement}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.getElement = function() {
  return /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellDB.FarmElement} value
 * @return {!proto.ei.ShellDB.ShellElementStatus} returns this
 */
proto.ei.ShellDB.ShellElementStatus.prototype.setElement = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellElementStatus} returns this
 */
proto.ei.ShellDB.ShellElementStatus.prototype.clearElement = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.hasElement = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string set_identifier = 2;
 * @return {string}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.getSetIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellElementStatus} returns this
 */
proto.ei.ShellDB.ShellElementStatus.prototype.setSetIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellElementStatus} returns this
 */
proto.ei.ShellDB.ShellElementStatus.prototype.clearSetIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellElementStatus.prototype.hasSetIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellDB.ShellSetVariationStatus.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellSetVariationStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellSetVariationStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellSetVariationStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    setIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    ownedVariationsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus}
 */
proto.ei.ShellDB.ShellSetVariationStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellSetVariationStatus;
  return proto.ei.ShellDB.ShellSetVariationStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellSetVariationStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus}
 */
proto.ei.ShellDB.ShellSetVariationStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addOwnedVariations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellSetVariationStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellSetVariationStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellSetVariationStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwnedVariationsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string set_identifier = 1;
 * @return {string}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.getSetIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.setSetIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.clearSetIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.hasSetIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string owned_variations = 2;
 * @return {!Array<string>}
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.getOwnedVariationsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.setOwnedVariationsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.addOwnedVariations = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus} returns this
 */
proto.ei.ShellDB.ShellSetVariationStatus.prototype.clearOwnedVariationsList = function() {
  return this.setOwnedVariationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellDB.FarmConfiguration.repeatedFields_ = [1,2,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.FarmConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.FarmConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.FarmConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    shellConfigsList: jspb.Message.toObjectList(msg.getShellConfigsList(),
    proto.ei.ShellDB.ShellConfiguration.toObject, includeInstance),
    shellSetConfigsList: jspb.Message.toObjectList(msg.getShellSetConfigsList(),
    proto.ei.ShellDB.ShellSetConfiguration.toObject, includeInstance),
    configureChickensByGroup: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    groupConfigsList: jspb.Message.toObjectList(msg.getGroupConfigsList(),
    proto.ei.ShellDB.ShellGroupConfiguration.toObject, includeInstance),
    chickenConfigsList: jspb.Message.toObjectList(msg.getChickenConfigsList(),
    proto.ei.ShellDB.ChickenConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.FarmConfiguration;
  return proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.FarmConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ShellDB.ShellConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader);
      msg.addShellConfigs(value);
      break;
    case 2:
      var value = new proto.ei.ShellDB.ShellSetConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.ShellSetConfiguration.deserializeBinaryFromReader);
      msg.addShellSetConfigs(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfigureChickensByGroup(value);
      break;
    case 8:
      var value = new proto.ei.ShellDB.ShellGroupConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.ShellGroupConfiguration.deserializeBinaryFromReader);
      msg.addGroupConfigs(value);
      break;
    case 9:
      var value = new proto.ei.ShellDB.ChickenConfig;
      reader.readMessage(value,proto.ei.ShellDB.ChickenConfig.deserializeBinaryFromReader);
      msg.addChickenConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.FarmConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShellConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getShellSetConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ShellDB.ShellSetConfiguration.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getGroupConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ShellDB.ShellGroupConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getChickenConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.ShellDB.ChickenConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ShellConfiguration shell_configs = 1;
 * @return {!Array<!proto.ei.ShellDB.ShellConfiguration>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getShellConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellConfiguration, 1));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellConfiguration>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setShellConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addShellConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellDB.ShellConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearShellConfigsList = function() {
  return this.setShellConfigsList([]);
};


/**
 * repeated ShellSetConfiguration shell_set_configs = 2;
 * @return {!Array<!proto.ei.ShellDB.ShellSetConfiguration>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getShellSetConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellSetConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellSetConfiguration, 2));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellSetConfiguration>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setShellSetConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellSetConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellSetConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addShellSetConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ShellDB.ShellSetConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearShellSetConfigsList = function() {
  return this.setShellSetConfigsList([]);
};


/**
 * optional bool configure_chickens_by_group = 7;
 * @return {boolean}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getConfigureChickensByGroup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.setConfigureChickensByGroup = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearConfigureChickensByGroup = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.hasConfigureChickensByGroup = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated ShellGroupConfiguration group_configs = 8;
 * @return {!Array<!proto.ei.ShellDB.ShellGroupConfiguration>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getGroupConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellGroupConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellGroupConfiguration, 8));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellGroupConfiguration>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setGroupConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellGroupConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addGroupConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ShellDB.ShellGroupConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearGroupConfigsList = function() {
  return this.setGroupConfigsList([]);
};


/**
 * repeated ChickenConfig chicken_configs = 9;
 * @return {!Array<!proto.ei.ShellDB.ChickenConfig>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getChickenConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ChickenConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ChickenConfig, 9));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ChickenConfig>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setChickenConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.ShellDB.ChickenConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ChickenConfig}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addChickenConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.ShellDB.ChickenConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearChickenConfigsList = function() {
  return this.setChickenConfigsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    index: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    shellIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.ShellConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellConfiguration;
  return proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShellIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ShellSpec.AssetType asset_type = 1;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string shell_identifier = 3;
 * @return {string}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getShellIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setShellIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearShellIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasShellIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellSetConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellSetConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellSetConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    element: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    index: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    shellSetIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    variationIdentifier: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    decoratorIdentifier: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration}
 */
proto.ei.ShellDB.ShellSetConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellSetConfiguration;
  return proto.ei.ShellDB.ShellSetConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellSetConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration}
 */
proto.ei.ShellDB.ShellSetConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellDB.FarmElement} */ (reader.readEnum());
      msg.setElement(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShellSetIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariationIdentifier(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDecoratorIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellSetConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellSetConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellSetConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional FarmElement element = 1;
 * @return {!proto.ei.ShellDB.FarmElement}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getElement = function() {
  return /** @type {!proto.ei.ShellDB.FarmElement} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellDB.FarmElement} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setElement = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearElement = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasElement = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string shell_set_identifier = 3;
 * @return {string}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getShellSetIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setShellSetIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearShellSetIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasShellSetIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string variation_identifier = 4;
 * @return {string}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getVariationIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setVariationIdentifier = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearVariationIdentifier = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasVariationIdentifier = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string decorator_identifier = 5;
 * @return {string}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.getDecoratorIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.setDecoratorIdentifier = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellSetConfiguration} returns this
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.clearDecoratorIdentifier = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellSetConfiguration.prototype.hasDecoratorIdentifier = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellGroupConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellGroupConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellGroupConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    groupIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration}
 */
proto.ei.ShellDB.ShellGroupConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellGroupConfiguration;
  return proto.ei.ShellDB.ShellGroupConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellGroupConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration}
 */
proto.ei.ShellDB.ShellGroupConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellGroupConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellGroupConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellGroupConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ShellSpec.AssetType asset_type = 1;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration} returns this
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration} returns this
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string group_identifier = 2;
 * @return {string}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.getGroupIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration} returns this
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.setGroupIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellGroupConfiguration} returns this
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.clearGroupIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellGroupConfiguration.prototype.hasGroupIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ChickenConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ChickenConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ChickenConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ChickenConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    chickenIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    hatIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ChickenConfig}
 */
proto.ei.ShellDB.ChickenConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ChickenConfig;
  return proto.ei.ShellDB.ChickenConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ChickenConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ChickenConfig}
 */
proto.ei.ShellDB.ChickenConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChickenIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHatIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ChickenConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ChickenConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ChickenConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ChickenConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string chicken_identifier = 1;
 * @return {string}
 */
proto.ei.ShellDB.ChickenConfig.prototype.getChickenIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ChickenConfig} returns this
 */
proto.ei.ShellDB.ChickenConfig.prototype.setChickenIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ChickenConfig} returns this
 */
proto.ei.ShellDB.ChickenConfig.prototype.clearChickenIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ChickenConfig.prototype.hasChickenIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string hat_identifier = 2;
 * @return {string}
 */
proto.ei.ShellDB.ChickenConfig.prototype.getHatIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ChickenConfig} returns this
 */
proto.ei.ShellDB.ChickenConfig.prototype.setHatIdentifier = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ChickenConfig} returns this
 */
proto.ei.ShellDB.ChickenConfig.prototype.clearHatIdentifier = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ChickenConfig.prototype.hasHatIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ShellStatus shell_inventory = 1;
 * @return {!Array<!proto.ei.ShellDB.ShellStatus>}
 */
proto.ei.ShellDB.prototype.getShellInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellStatus, 1));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.prototype.addShellInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellDB.ShellStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellInventoryList = function() {
  return this.setShellInventoryList([]);
};


/**
 * repeated ShellElementStatus shell_element_inventory = 5;
 * @return {!Array<!proto.ei.ShellDB.ShellElementStatus>}
 */
proto.ei.ShellDB.prototype.getShellElementInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellElementStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellElementStatus, 5));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellElementStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellElementInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellElementStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellElementStatus}
 */
proto.ei.ShellDB.prototype.addShellElementInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ei.ShellDB.ShellElementStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellElementInventoryList = function() {
  return this.setShellElementInventoryList([]);
};


/**
 * repeated ShellSetVariationStatus shell_variation_inventory = 8;
 * @return {!Array<!proto.ei.ShellDB.ShellSetVariationStatus>}
 */
proto.ei.ShellDB.prototype.getShellVariationInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellSetVariationStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellSetVariationStatus, 8));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellSetVariationStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellVariationInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellSetVariationStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellSetVariationStatus}
 */
proto.ei.ShellDB.prototype.addShellVariationInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ShellDB.ShellSetVariationStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellVariationInventoryList = function() {
  return this.setShellVariationInventoryList([]);
};


/**
 * repeated ShellStatus shell_set_inventory = 2;
 * @return {!Array<!proto.ei.ShellDB.ShellStatus>}
 */
proto.ei.ShellDB.prototype.getShellSetInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellStatus, 2));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellSetInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.prototype.addShellSetInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ShellDB.ShellStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellSetInventoryList = function() {
  return this.setShellSetInventoryList([]);
};


/**
 * repeated ShellStatus shell_object_inventory = 4;
 * @return {!Array<!proto.ei.ShellDB.ShellStatus>}
 */
proto.ei.ShellDB.prototype.getShellObjectInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellStatus, 4));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellObjectInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.prototype.addShellObjectInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ShellDB.ShellStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellObjectInventoryList = function() {
  return this.setShellObjectInventoryList([]);
};


/**
 * repeated FarmConfiguration farm_configs = 3;
 * @return {!Array<!proto.ei.ShellDB.FarmConfiguration>}
 */
proto.ei.ShellDB.prototype.getFarmConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.FarmConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.FarmConfiguration, 3));
};


/**
 * @param {!Array<!proto.ei.ShellDB.FarmConfiguration>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setFarmConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ShellDB.FarmConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.prototype.addFarmConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ShellDB.FarmConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearFarmConfigsList = function() {
  return this.setFarmConfigsList([]);
};


/**
 * repeated string new_shells_downloaded = 6;
 * @return {!Array<string>}
 */
proto.ei.ShellDB.prototype.getNewShellsDownloadedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.setNewShellsDownloadedList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.addNewShellsDownloaded = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearNewShellsDownloadedList = function() {
  return this.setNewShellsDownloadedList([]);
};


/**
 * repeated string new_shells_seen = 7;
 * @return {!Array<string>}
 */
proto.ei.ShellDB.prototype.getNewShellsSeenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.setNewShellsSeenList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.addNewShellsSeen = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearNewShellsSeenList = function() {
  return this.setNewShellsSeenList([]);
};


