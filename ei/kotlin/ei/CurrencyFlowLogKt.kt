//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmName("-initializecurrencyFlowLog")
public inline fun currencyFlowLog(block: ei.CurrencyFlowLogKt.Dsl.() -> kotlin.Unit): ei.Ei.CurrencyFlowLog =
  ei.CurrencyFlowLogKt.Dsl._create(ei.Ei.CurrencyFlowLog.newBuilder()).apply { block() }._build()
public object CurrencyFlowLogKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.CurrencyFlowLog.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.CurrencyFlowLog.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.CurrencyFlowLog = _builder.build()

    /**
     * <code>optional string user_id = 1;</code>
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>optional string user_id = 1;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional string user_id = 1;</code>
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * <code>optional double approx_time = 2;</code>
     */
    public var approxTime: kotlin.Double
      @JvmName("getApproxTime")
      get() = _builder.getApproxTime()
      @JvmName("setApproxTime")
      set(value) {
        _builder.setApproxTime(value)
      }
    /**
     * <code>optional double approx_time = 2;</code>
     */
    public fun clearApproxTime() {
      _builder.clearApproxTime()
    }
    /**
     * <code>optional double approx_time = 2;</code>
     * @return Whether the approxTime field is set.
     */
    public fun hasApproxTime(): kotlin.Boolean {
      return _builder.hasApproxTime()
    }

    /**
     * <code>optional .ei.RewardType currency = 3;</code>
     */
    public var currency: ei.Ei.RewardType
      @JvmName("getCurrency")
      get() = _builder.getCurrency()
      @JvmName("setCurrency")
      set(value) {
        _builder.setCurrency(value)
      }
    /**
     * <code>optional .ei.RewardType currency = 3;</code>
     */
    public fun clearCurrency() {
      _builder.clearCurrency()
    }
    /**
     * <code>optional .ei.RewardType currency = 3;</code>
     * @return Whether the currency field is set.
     */
    public fun hasCurrency(): kotlin.Boolean {
      return _builder.hasCurrency()
    }

    /**
     * <code>optional int64 amount = 4;</code>
     */
    public var amount: kotlin.Long
      @JvmName("getAmount")
      get() = _builder.getAmount()
      @JvmName("setAmount")
      set(value) {
        _builder.setAmount(value)
      }
    /**
     * <code>optional int64 amount = 4;</code>
     */
    public fun clearAmount() {
      _builder.clearAmount()
    }
    /**
     * <code>optional int64 amount = 4;</code>
     * @return Whether the amount field is set.
     */
    public fun hasAmount(): kotlin.Boolean {
      return _builder.hasAmount()
    }

    /**
     * <code>optional string location = 5;</code>
     */
    public var location: kotlin.String
      @JvmName("getLocation")
      get() = _builder.getLocation()
      @JvmName("setLocation")
      set(value) {
        _builder.setLocation(value)
      }
    /**
     * <code>optional string location = 5;</code>
     */
    public fun clearLocation() {
      _builder.clearLocation()
    }
    /**
     * <code>optional string location = 5;</code>
     * @return Whether the location field is set.
     */
    public fun hasLocation(): kotlin.Boolean {
      return _builder.hasLocation()
    }

    /**
     * <code>optional string version = 6;</code>
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * <code>optional string version = 6;</code>
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }
    /**
     * <code>optional string version = 6;</code>
     * @return Whether the version field is set.
     */
    public fun hasVersion(): kotlin.Boolean {
      return _builder.hasVersion()
    }

    /**
     * <code>optional string platform = 7;</code>
     */
    public var platform: kotlin.String
      @JvmName("getPlatform")
      get() = _builder.getPlatform()
      @JvmName("setPlatform")
      set(value) {
        _builder.setPlatform(value)
      }
    /**
     * <code>optional string platform = 7;</code>
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }
    /**
     * <code>optional string platform = 7;</code>
     * @return Whether the platform field is set.
     */
    public fun hasPlatform(): kotlin.Boolean {
      return _builder.hasPlatform()
    }

    /**
     * <code>optional double soul_eggs = 8;</code>
     */
    public var soulEggs: kotlin.Double
      @JvmName("getSoulEggs")
      get() = _builder.getSoulEggs()
      @JvmName("setSoulEggs")
      set(value) {
        _builder.setSoulEggs(value)
      }
    /**
     * <code>optional double soul_eggs = 8;</code>
     */
    public fun clearSoulEggs() {
      _builder.clearSoulEggs()
    }
    /**
     * <code>optional double soul_eggs = 8;</code>
     * @return Whether the soulEggs field is set.
     */
    public fun hasSoulEggs(): kotlin.Boolean {
      return _builder.hasSoulEggs()
    }

    /**
     * <code>optional uint64 tickets_spent = 9;</code>
     */
    public var ticketsSpent: kotlin.Long
      @JvmName("getTicketsSpent")
      get() = _builder.getTicketsSpent()
      @JvmName("setTicketsSpent")
      set(value) {
        _builder.setTicketsSpent(value)
      }
    /**
     * <code>optional uint64 tickets_spent = 9;</code>
     */
    public fun clearTicketsSpent() {
      _builder.clearTicketsSpent()
    }
    /**
     * <code>optional uint64 tickets_spent = 9;</code>
     * @return Whether the ticketsSpent field is set.
     */
    public fun hasTicketsSpent(): kotlin.Boolean {
      return _builder.hasTicketsSpent()
    }

    /**
     * <code>optional uint64 gold_spent = 10;</code>
     */
    public var goldSpent: kotlin.Long
      @JvmName("getGoldSpent")
      get() = _builder.getGoldSpent()
      @JvmName("setGoldSpent")
      set(value) {
        _builder.setGoldSpent(value)
      }
    /**
     * <code>optional uint64 gold_spent = 10;</code>
     */
    public fun clearGoldSpent() {
      _builder.clearGoldSpent()
    }
    /**
     * <code>optional uint64 gold_spent = 10;</code>
     * @return Whether the goldSpent field is set.
     */
    public fun hasGoldSpent(): kotlin.Boolean {
      return _builder.hasGoldSpent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CurrencyFlowLog.copy(block: ei.CurrencyFlowLogKt.Dsl.() -> kotlin.Unit): ei.Ei.CurrencyFlowLog =
  ei.CurrencyFlowLogKt.Dsl._create(this.toBuilder()).apply { block() }._build()

