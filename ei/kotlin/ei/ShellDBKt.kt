//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmSynthetic
public inline fun shellDB(block: ei.ShellDBKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellDB =
  ei.ShellDBKt.Dsl._create(ei.Ei.ShellDB.newBuilder()).apply { block() }._build()
public object ShellDBKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ShellDB.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ShellDB.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ShellDB = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ShellInventoryProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ei.ShellDB.ShellStatus shell_inventory = 1;</code>
     */
     public val shellInventory: com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellStatus, ShellInventoryProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getShellInventoryList()
      )
    /**
     * <code>repeated .ei.ShellDB.ShellStatus shell_inventory = 1;</code>
     * @param value The shellInventory to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addShellInventory")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellStatus, ShellInventoryProxy>.add(value: ei.Ei.ShellDB.ShellStatus) {
      _builder.addShellInventory(value)
    }/**
     * <code>repeated .ei.ShellDB.ShellStatus shell_inventory = 1;</code>
     * @param value The shellInventory to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignShellInventory")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellStatus, ShellInventoryProxy>.plusAssign(value: ei.Ei.ShellDB.ShellStatus) {
      add(value)
    }/**
     * <code>repeated .ei.ShellDB.ShellStatus shell_inventory = 1;</code>
     * @param values The shellInventory to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllShellInventory")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellStatus, ShellInventoryProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellDB.ShellStatus>) {
      _builder.addAllShellInventory(values)
    }/**
     * <code>repeated .ei.ShellDB.ShellStatus shell_inventory = 1;</code>
     * @param values The shellInventory to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllShellInventory")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellStatus, ShellInventoryProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellDB.ShellStatus>) {
      addAll(values)
    }/**
     * <code>repeated .ei.ShellDB.ShellStatus shell_inventory = 1;</code>
     * @param index The index to set the value at.
     * @param value The shellInventory to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setShellInventory")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellStatus, ShellInventoryProxy>.set(index: kotlin.Int, value: ei.Ei.ShellDB.ShellStatus) {
      _builder.setShellInventory(index, value)
    }/**
     * <code>repeated .ei.ShellDB.ShellStatus shell_inventory = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearShellInventory")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellStatus, ShellInventoryProxy>.clear() {
      _builder.clearShellInventory()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FarmConfigsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ei.ShellDB.FarmConfiguration farm_configs = 3;</code>
     */
     public val farmConfigs: com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.FarmConfiguration, FarmConfigsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFarmConfigsList()
      )
    /**
     * <code>repeated .ei.ShellDB.FarmConfiguration farm_configs = 3;</code>
     * @param value The farmConfigs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFarmConfigs")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.FarmConfiguration, FarmConfigsProxy>.add(value: ei.Ei.ShellDB.FarmConfiguration) {
      _builder.addFarmConfigs(value)
    }/**
     * <code>repeated .ei.ShellDB.FarmConfiguration farm_configs = 3;</code>
     * @param value The farmConfigs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFarmConfigs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.FarmConfiguration, FarmConfigsProxy>.plusAssign(value: ei.Ei.ShellDB.FarmConfiguration) {
      add(value)
    }/**
     * <code>repeated .ei.ShellDB.FarmConfiguration farm_configs = 3;</code>
     * @param values The farmConfigs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFarmConfigs")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.FarmConfiguration, FarmConfigsProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellDB.FarmConfiguration>) {
      _builder.addAllFarmConfigs(values)
    }/**
     * <code>repeated .ei.ShellDB.FarmConfiguration farm_configs = 3;</code>
     * @param values The farmConfigs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFarmConfigs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.FarmConfiguration, FarmConfigsProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellDB.FarmConfiguration>) {
      addAll(values)
    }/**
     * <code>repeated .ei.ShellDB.FarmConfiguration farm_configs = 3;</code>
     * @param index The index to set the value at.
     * @param value The farmConfigs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFarmConfigs")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.FarmConfiguration, FarmConfigsProxy>.set(index: kotlin.Int, value: ei.Ei.ShellDB.FarmConfiguration) {
      _builder.setFarmConfigs(index, value)
    }/**
     * <code>repeated .ei.ShellDB.FarmConfiguration farm_configs = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFarmConfigs")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.FarmConfiguration, FarmConfigsProxy>.clear() {
      _builder.clearFarmConfigs()
    }}
  @kotlin.jvm.JvmSynthetic
  public inline fun shellStatus(block: ei.ShellDBKt.ShellStatusKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellDB.ShellStatus =
    ei.ShellDBKt.ShellStatusKt.Dsl._create(ei.Ei.ShellDB.ShellStatus.newBuilder()).apply { block() }._build()
  public object ShellStatusKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: ei.Ei.ShellDB.ShellStatus.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: ei.Ei.ShellDB.ShellStatus.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): ei.Ei.ShellDB.ShellStatus = _builder.build()

      /**
       * <code>optional string shell_identifier = 1;</code>
       */
      public var shellIdentifier: kotlin.String
        @JvmName("getShellIdentifier")
        get() = _builder.getShellIdentifier()
        @JvmName("setShellIdentifier")
        set(value) {
          _builder.setShellIdentifier(value)
        }
      /**
       * <code>optional string shell_identifier = 1;</code>
       */
      public fun clearShellIdentifier() {
        _builder.clearShellIdentifier()
      }
      /**
       * <code>optional string shell_identifier = 1;</code>
       * @return Whether the shellIdentifier field is set.
       */
      public fun hasShellIdentifier(): kotlin.Boolean {
        return _builder.hasShellIdentifier()
      }

      /**
       * <code>optional bool owned = 2;</code>
       */
      public var owned: kotlin.Boolean
        @JvmName("getOwned")
        get() = _builder.getOwned()
        @JvmName("setOwned")
        set(value) {
          _builder.setOwned(value)
        }
      /**
       * <code>optional bool owned = 2;</code>
       */
      public fun clearOwned() {
        _builder.clearOwned()
      }
      /**
       * <code>optional bool owned = 2;</code>
       * @return Whether the owned field is set.
       */
      public fun hasOwned(): kotlin.Boolean {
        return _builder.hasOwned()
      }
    }
  }
  @kotlin.jvm.JvmSynthetic
  public inline fun farmConfiguration(block: ei.ShellDBKt.FarmConfigurationKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellDB.FarmConfiguration =
    ei.ShellDBKt.FarmConfigurationKt.Dsl._create(ei.Ei.ShellDB.FarmConfiguration.newBuilder()).apply { block() }._build()
  public object FarmConfigurationKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: ei.Ei.ShellDB.FarmConfiguration.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: ei.Ei.ShellDB.FarmConfiguration.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): ei.Ei.ShellDB.FarmConfiguration = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ShellConfigsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .ei.ShellDB.ShellConfiguration shell_configs = 1;</code>
       */
       public val shellConfigs: com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellConfiguration, ShellConfigsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getShellConfigsList()
        )
      /**
       * <code>repeated .ei.ShellDB.ShellConfiguration shell_configs = 1;</code>
       * @param value The shellConfigs to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addShellConfigs")
      public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellConfiguration, ShellConfigsProxy>.add(value: ei.Ei.ShellDB.ShellConfiguration) {
        _builder.addShellConfigs(value)
      }/**
       * <code>repeated .ei.ShellDB.ShellConfiguration shell_configs = 1;</code>
       * @param value The shellConfigs to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignShellConfigs")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellConfiguration, ShellConfigsProxy>.plusAssign(value: ei.Ei.ShellDB.ShellConfiguration) {
        add(value)
      }/**
       * <code>repeated .ei.ShellDB.ShellConfiguration shell_configs = 1;</code>
       * @param values The shellConfigs to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllShellConfigs")
      public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellConfiguration, ShellConfigsProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellDB.ShellConfiguration>) {
        _builder.addAllShellConfigs(values)
      }/**
       * <code>repeated .ei.ShellDB.ShellConfiguration shell_configs = 1;</code>
       * @param values The shellConfigs to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllShellConfigs")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellConfiguration, ShellConfigsProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellDB.ShellConfiguration>) {
        addAll(values)
      }/**
       * <code>repeated .ei.ShellDB.ShellConfiguration shell_configs = 1;</code>
       * @param index The index to set the value at.
       * @param value The shellConfigs to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setShellConfigs")
      public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellConfiguration, ShellConfigsProxy>.set(index: kotlin.Int, value: ei.Ei.ShellDB.ShellConfiguration) {
        _builder.setShellConfigs(index, value)
      }/**
       * <code>repeated .ei.ShellDB.ShellConfiguration shell_configs = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearShellConfigs")
      public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellDB.ShellConfiguration, ShellConfigsProxy>.clear() {
        _builder.clearShellConfigs()
      }}
  }
  @kotlin.jvm.JvmSynthetic
  public inline fun shellConfiguration(block: ei.ShellDBKt.ShellConfigurationKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellDB.ShellConfiguration =
    ei.ShellDBKt.ShellConfigurationKt.Dsl._create(ei.Ei.ShellDB.ShellConfiguration.newBuilder()).apply { block() }._build()
  public object ShellConfigurationKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: ei.Ei.ShellDB.ShellConfiguration.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: ei.Ei.ShellDB.ShellConfiguration.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): ei.Ei.ShellDB.ShellConfiguration = _builder.build()

      /**
       * <code>optional .ei.ShellSpec.AssetType asset_type = 1;</code>
       */
      public var assetType: ei.Ei.ShellSpec.AssetType
        @JvmName("getAssetType")
        get() = _builder.getAssetType()
        @JvmName("setAssetType")
        set(value) {
          _builder.setAssetType(value)
        }
      /**
       * <code>optional .ei.ShellSpec.AssetType asset_type = 1;</code>
       */
      public fun clearAssetType() {
        _builder.clearAssetType()
      }
      /**
       * <code>optional .ei.ShellSpec.AssetType asset_type = 1;</code>
       * @return Whether the assetType field is set.
       */
      public fun hasAssetType(): kotlin.Boolean {
        return _builder.hasAssetType()
      }

      /**
       * <code>optional uint32 index = 2;</code>
       */
      public var index: kotlin.Int
        @JvmName("getIndex")
        get() = _builder.getIndex()
        @JvmName("setIndex")
        set(value) {
          _builder.setIndex(value)
        }
      /**
       * <code>optional uint32 index = 2;</code>
       */
      public fun clearIndex() {
        _builder.clearIndex()
      }
      /**
       * <code>optional uint32 index = 2;</code>
       * @return Whether the index field is set.
       */
      public fun hasIndex(): kotlin.Boolean {
        return _builder.hasIndex()
      }

      /**
       * <code>optional string shell_identifier = 3;</code>
       */
      public var shellIdentifier: kotlin.String
        @JvmName("getShellIdentifier")
        get() = _builder.getShellIdentifier()
        @JvmName("setShellIdentifier")
        set(value) {
          _builder.setShellIdentifier(value)
        }
      /**
       * <code>optional string shell_identifier = 3;</code>
       */
      public fun clearShellIdentifier() {
        _builder.clearShellIdentifier()
      }
      /**
       * <code>optional string shell_identifier = 3;</code>
       * @return Whether the shellIdentifier field is set.
       */
      public fun hasShellIdentifier(): kotlin.Boolean {
        return _builder.hasShellIdentifier()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellDB.copy(block: ei.ShellDBKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellDB =
  ei.ShellDBKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellDB.ShellStatus.copy(block: ei.ShellDBKt.ShellStatusKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellDB.ShellStatus =
  ei.ShellDBKt.ShellStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellDB.FarmConfiguration.copy(block: ei.ShellDBKt.FarmConfigurationKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellDB.FarmConfiguration =
  ei.ShellDBKt.FarmConfigurationKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellDB.ShellConfiguration.copy(block: ei.ShellDBKt.ShellConfigurationKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellDB.ShellConfiguration =
  ei.ShellDBKt.ShellConfigurationKt.Dsl._create(this.toBuilder()).apply { block() }._build()
