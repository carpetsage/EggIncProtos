//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmName("-initializeconfigRequest")
public inline fun configRequest(block: ei.ConfigRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.ConfigRequest =
  ei.ConfigRequestKt.Dsl._create(ei.Ei.ConfigRequest.newBuilder()).apply { block() }._build()
public object ConfigRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ConfigRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ConfigRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ConfigRequest = _builder.build()

    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 1;</code>
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @JvmName("getRinfo")
      get() = _builder.getRinfo()
      @JvmName("setRinfo")
      set(value) {
        _builder.setRinfo(value)
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 1;</code>
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 1;</code>
     * @return Whether the rinfo field is set.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }
    public val ConfigRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * <code>optional double soul_eggs = 2;</code>
     */
    public var soulEggs: kotlin.Double
      @JvmName("getSoulEggs")
      get() = _builder.getSoulEggs()
      @JvmName("setSoulEggs")
      set(value) {
        _builder.setSoulEggs(value)
      }
    /**
     * <code>optional double soul_eggs = 2;</code>
     */
    public fun clearSoulEggs() {
      _builder.clearSoulEggs()
    }
    /**
     * <code>optional double soul_eggs = 2;</code>
     * @return Whether the soulEggs field is set.
     */
    public fun hasSoulEggs(): kotlin.Boolean {
      return _builder.hasSoulEggs()
    }

    /**
     * <code>optional bool artifacts_enabled = 3;</code>
     */
    public var artifactsEnabled: kotlin.Boolean
      @JvmName("getArtifactsEnabled")
      get() = _builder.getArtifactsEnabled()
      @JvmName("setArtifactsEnabled")
      set(value) {
        _builder.setArtifactsEnabled(value)
      }
    /**
     * <code>optional bool artifacts_enabled = 3;</code>
     */
    public fun clearArtifactsEnabled() {
      _builder.clearArtifactsEnabled()
    }
    /**
     * <code>optional bool artifacts_enabled = 3;</code>
     * @return Whether the artifactsEnabled field is set.
     */
    public fun hasArtifactsEnabled(): kotlin.Boolean {
      return _builder.hasArtifactsEnabled()
    }

    /**
     * <code>optional bool fuel_tank_unlocked = 4;</code>
     */
    public var fuelTankUnlocked: kotlin.Boolean
      @JvmName("getFuelTankUnlocked")
      get() = _builder.getFuelTankUnlocked()
      @JvmName("setFuelTankUnlocked")
      set(value) {
        _builder.setFuelTankUnlocked(value)
      }
    /**
     * <code>optional bool fuel_tank_unlocked = 4;</code>
     */
    public fun clearFuelTankUnlocked() {
      _builder.clearFuelTankUnlocked()
    }
    /**
     * <code>optional bool fuel_tank_unlocked = 4;</code>
     * @return Whether the fuelTankUnlocked field is set.
     */
    public fun hasFuelTankUnlocked(): kotlin.Boolean {
      return _builder.hasFuelTankUnlocked()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ConfigRequest.copy(block: ei.ConfigRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.ConfigRequest =
  ei.ConfigRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val ei.Ei.ConfigRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null

