//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmSynthetic
public inline fun consumeArtifactRequest(block: ei.ConsumeArtifactRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.ConsumeArtifactRequest =
  ei.ConsumeArtifactRequestKt.Dsl._create(ei.Ei.ConsumeArtifactRequest.newBuilder()).apply { block() }._build()
public object ConsumeArtifactRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ConsumeArtifactRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ConsumeArtifactRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ConsumeArtifactRequest = _builder.build()

    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 4;</code>
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @JvmName("getRinfo")
      get() = _builder.getRinfo()
      @JvmName("setRinfo")
      set(value) {
        _builder.setRinfo(value)
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 4;</code>
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 4;</code>
     * @return Whether the rinfo field is set.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    /**
     * <code>optional string ei_user_id = 3;</code>
     */
    public var eiUserId: kotlin.String
      @JvmName("getEiUserId")
      get() = _builder.getEiUserId()
      @JvmName("setEiUserId")
      set(value) {
        _builder.setEiUserId(value)
      }
    /**
     * <code>optional string ei_user_id = 3;</code>
     */
    public fun clearEiUserId() {
      _builder.clearEiUserId()
    }
    /**
     * <code>optional string ei_user_id = 3;</code>
     * @return Whether the eiUserId field is set.
     */
    public fun hasEiUserId(): kotlin.Boolean {
      return _builder.hasEiUserId()
    }

    /**
     * <code>optional .ei.ArtifactSpec spec = 1;</code>
     */
    public var spec: ei.Ei.ArtifactSpec
      @JvmName("getSpec")
      get() = _builder.getSpec()
      @JvmName("setSpec")
      set(value) {
        _builder.setSpec(value)
      }
    /**
     * <code>optional .ei.ArtifactSpec spec = 1;</code>
     */
    public fun clearSpec() {
      _builder.clearSpec()
    }
    /**
     * <code>optional .ei.ArtifactSpec spec = 1;</code>
     * @return Whether the spec field is set.
     */
    public fun hasSpec(): kotlin.Boolean {
      return _builder.hasSpec()
    }

    /**
     * <code>optional string artifact_server_id = 5;</code>
     */
    public var artifactServerId: kotlin.String
      @JvmName("getArtifactServerId")
      get() = _builder.getArtifactServerId()
      @JvmName("setArtifactServerId")
      set(value) {
        _builder.setArtifactServerId(value)
      }
    /**
     * <code>optional string artifact_server_id = 5;</code>
     */
    public fun clearArtifactServerId() {
      _builder.clearArtifactServerId()
    }
    /**
     * <code>optional string artifact_server_id = 5;</code>
     * @return Whether the artifactServerId field is set.
     */
    public fun hasArtifactServerId(): kotlin.Boolean {
      return _builder.hasArtifactServerId()
    }

    /**
     * <code>optional uint64 original_item_id = 2;</code>
     */
    public var originalItemId: kotlin.Long
      @JvmName("getOriginalItemId")
      get() = _builder.getOriginalItemId()
      @JvmName("setOriginalItemId")
      set(value) {
        _builder.setOriginalItemId(value)
      }
    /**
     * <code>optional uint64 original_item_id = 2;</code>
     */
    public fun clearOriginalItemId() {
      _builder.clearOriginalItemId()
    }
    /**
     * <code>optional uint64 original_item_id = 2;</code>
     * @return Whether the originalItemId field is set.
     */
    public fun hasOriginalItemId(): kotlin.Boolean {
      return _builder.hasOriginalItemId()
    }

    /**
     * <code>optional uint32 quantity = 6;</code>
     */
    public var quantity: kotlin.Int
      @JvmName("getQuantity")
      get() = _builder.getQuantity()
      @JvmName("setQuantity")
      set(value) {
        _builder.setQuantity(value)
      }
    /**
     * <code>optional uint32 quantity = 6;</code>
     */
    public fun clearQuantity() {
      _builder.clearQuantity()
    }
    /**
     * <code>optional uint32 quantity = 6;</code>
     * @return Whether the quantity field is set.
     */
    public fun hasQuantity(): kotlin.Boolean {
      return _builder.hasQuantity()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ConsumeArtifactRequest.copy(block: ei.ConsumeArtifactRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.ConsumeArtifactRequest =
  ei.ConsumeArtifactRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
