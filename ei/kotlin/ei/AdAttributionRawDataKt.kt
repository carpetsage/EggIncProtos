//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmSynthetic
public inline fun adAttributionRawData(block: ei.AdAttributionRawDataKt.Dsl.() -> kotlin.Unit): ei.Ei.AdAttributionRawData =
  ei.AdAttributionRawDataKt.Dsl._create(ei.Ei.AdAttributionRawData.newBuilder()).apply { block() }._build()
public object AdAttributionRawDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.AdAttributionRawData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.AdAttributionRawData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.AdAttributionRawData = _builder.build()

    /**
     * <code>optional string device_ad_id = 1;</code>
     */
    public var deviceAdId: kotlin.String
      @JvmName("getDeviceAdId")
      get() = _builder.getDeviceAdId()
      @JvmName("setDeviceAdId")
      set(value) {
        _builder.setDeviceAdId(value)
      }
    /**
     * <code>optional string device_ad_id = 1;</code>
     */
    public fun clearDeviceAdId() {
      _builder.clearDeviceAdId()
    }
    /**
     * <code>optional string device_ad_id = 1;</code>
     * @return Whether the deviceAdId field is set.
     */
    public fun hasDeviceAdId(): kotlin.Boolean {
      return _builder.hasDeviceAdId()
    }

    /**
     * <code>optional string user_id = 4;</code>
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>optional string user_id = 4;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional string user_id = 4;</code>
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * <code>optional string ad_network = 2;</code>
     */
    public var adNetwork: kotlin.String
      @JvmName("getAdNetwork")
      get() = _builder.getAdNetwork()
      @JvmName("setAdNetwork")
      set(value) {
        _builder.setAdNetwork(value)
      }
    /**
     * <code>optional string ad_network = 2;</code>
     */
    public fun clearAdNetwork() {
      _builder.clearAdNetwork()
    }
    /**
     * <code>optional string ad_network = 2;</code>
     * @return Whether the adNetwork field is set.
     */
    public fun hasAdNetwork(): kotlin.Boolean {
      return _builder.hasAdNetwork()
    }

    /**
     * <code>optional string json_data = 3;</code>
     */
    public var jsonData: kotlin.String
      @JvmName("getJsonData")
      get() = _builder.getJsonData()
      @JvmName("setJsonData")
      set(value) {
        _builder.setJsonData(value)
      }
    /**
     * <code>optional string json_data = 3;</code>
     */
    public fun clearJsonData() {
      _builder.clearJsonData()
    }
    /**
     * <code>optional string json_data = 3;</code>
     * @return Whether the jsonData field is set.
     */
    public fun hasJsonData(): kotlin.Boolean {
      return _builder.hasJsonData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.AdAttributionRawData.copy(block: ei.AdAttributionRawDataKt.Dsl.() -> kotlin.Unit): ei.Ei.AdAttributionRawData =
  ei.AdAttributionRawDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()
