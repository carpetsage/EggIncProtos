//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmName("-initializesubscriptionChangeHintRequest")
public inline fun subscriptionChangeHintRequest(block: ei.SubscriptionChangeHintRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.SubscriptionChangeHintRequest =
  ei.SubscriptionChangeHintRequestKt.Dsl._create(ei.Ei.SubscriptionChangeHintRequest.newBuilder()).apply { block() }._build()
public object SubscriptionChangeHintRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.SubscriptionChangeHintRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.SubscriptionChangeHintRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.SubscriptionChangeHintRequest = _builder.build()

    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 3;</code>
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @JvmName("getRinfo")
      get() = _builder.getRinfo()
      @JvmName("setRinfo")
      set(value) {
        _builder.setRinfo(value)
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 3;</code>
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 3;</code>
     * @return Whether the rinfo field is set.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }
    public val SubscriptionChangeHintRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * <code>optional string original_transaction_id = 1;</code>
     */
    public var originalTransactionId: kotlin.String
      @JvmName("getOriginalTransactionId")
      get() = _builder.getOriginalTransactionId()
      @JvmName("setOriginalTransactionId")
      set(value) {
        _builder.setOriginalTransactionId(value)
      }
    /**
     * <code>optional string original_transaction_id = 1;</code>
     */
    public fun clearOriginalTransactionId() {
      _builder.clearOriginalTransactionId()
    }
    /**
     * <code>optional string original_transaction_id = 1;</code>
     * @return Whether the originalTransactionId field is set.
     */
    public fun hasOriginalTransactionId(): kotlin.Boolean {
      return _builder.hasOriginalTransactionId()
    }

    /**
     * <code>optional .ei.UserSubscriptionInfo.Level next_subscription_level = 2;</code>
     */
    public var nextSubscriptionLevel: ei.Ei.UserSubscriptionInfo.Level
      @JvmName("getNextSubscriptionLevel")
      get() = _builder.getNextSubscriptionLevel()
      @JvmName("setNextSubscriptionLevel")
      set(value) {
        _builder.setNextSubscriptionLevel(value)
      }
    /**
     * <code>optional .ei.UserSubscriptionInfo.Level next_subscription_level = 2;</code>
     */
    public fun clearNextSubscriptionLevel() {
      _builder.clearNextSubscriptionLevel()
    }
    /**
     * <code>optional .ei.UserSubscriptionInfo.Level next_subscription_level = 2;</code>
     * @return Whether the nextSubscriptionLevel field is set.
     */
    public fun hasNextSubscriptionLevel(): kotlin.Boolean {
      return _builder.hasNextSubscriptionLevel()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.SubscriptionChangeHintRequest.copy(block: ei.SubscriptionChangeHintRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.SubscriptionChangeHintRequest =
  ei.SubscriptionChangeHintRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val ei.Ei.SubscriptionChangeHintRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null

