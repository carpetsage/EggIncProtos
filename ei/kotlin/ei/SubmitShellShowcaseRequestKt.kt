//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmName("-initializesubmitShellShowcaseRequest")
public inline fun submitShellShowcaseRequest(block: ei.SubmitShellShowcaseRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.SubmitShellShowcaseRequest =
  ei.SubmitShellShowcaseRequestKt.Dsl._create(ei.Ei.SubmitShellShowcaseRequest.newBuilder()).apply { block() }._build()
public object SubmitShellShowcaseRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.SubmitShellShowcaseRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.SubmitShellShowcaseRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.SubmitShellShowcaseRequest = _builder.build()

    /**
     * <code>optional string id = 1;</code>
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>optional string id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * <code>optional string id = 1;</code>
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }

    /**
     * <code>optional string user_id = 2;</code>
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>optional string user_id = 2;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional string user_id = 2;</code>
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * <code>optional .ei.ShellDB.FarmConfiguration farm_config = 3;</code>
     */
    public var farmConfig: ei.Ei.ShellDB.FarmConfiguration
      @JvmName("getFarmConfig")
      get() = _builder.getFarmConfig()
      @JvmName("setFarmConfig")
      set(value) {
        _builder.setFarmConfig(value)
      }
    /**
     * <code>optional .ei.ShellDB.FarmConfiguration farm_config = 3;</code>
     */
    public fun clearFarmConfig() {
      _builder.clearFarmConfig()
    }
    /**
     * <code>optional .ei.ShellDB.FarmConfiguration farm_config = 3;</code>
     * @return Whether the farmConfig field is set.
     */
    public fun hasFarmConfig(): kotlin.Boolean {
      return _builder.hasFarmConfig()
    }
    public val SubmitShellShowcaseRequestKt.Dsl.farmConfigOrNull: ei.Ei.ShellDB.FarmConfiguration?
      get() = _builder.farmConfigOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.SubmitShellShowcaseRequest.copy(block: ei.SubmitShellShowcaseRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.SubmitShellShowcaseRequest =
  ei.SubmitShellShowcaseRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val ei.Ei.SubmitShellShowcaseRequestOrBuilder.farmConfigOrNull: ei.Ei.ShellDB.FarmConfiguration?
  get() = if (hasFarmConfig()) getFarmConfig() else null

