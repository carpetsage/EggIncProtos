//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmName("-initializeshellShowcase")
public inline fun shellShowcase(block: ei.ShellShowcaseKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellShowcase =
  ei.ShellShowcaseKt.Dsl._create(ei.Ei.ShellShowcase.newBuilder()).apply { block() }._build()
public object ShellShowcaseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ShellShowcase.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ShellShowcase.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ShellShowcase = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TopProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ei.ShellShowcaseListing top = 1;</code>
     */
     public val top: com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, TopProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTopList()
      )
    /**
     * <code>repeated .ei.ShellShowcaseListing top = 1;</code>
     * @param value The top to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTop")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, TopProxy>.add(value: ei.Ei.ShellShowcaseListing) {
      _builder.addTop(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing top = 1;</code>
     * @param value The top to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTop")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, TopProxy>.plusAssign(value: ei.Ei.ShellShowcaseListing) {
      add(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing top = 1;</code>
     * @param values The top to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTop")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, TopProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListing>) {
      _builder.addAllTop(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing top = 1;</code>
     * @param values The top to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTop")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, TopProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListing>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing top = 1;</code>
     * @param index The index to set the value at.
     * @param value The top to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTop")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, TopProxy>.set(index: kotlin.Int, value: ei.Ei.ShellShowcaseListing) {
      _builder.setTop(index, value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing top = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTop")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, TopProxy>.clear() {
      _builder.clearTop()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FeaturedProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ei.ShellShowcaseListing featured = 2;</code>
     */
     public val featured: com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, FeaturedProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFeaturedList()
      )
    /**
     * <code>repeated .ei.ShellShowcaseListing featured = 2;</code>
     * @param value The featured to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFeatured")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, FeaturedProxy>.add(value: ei.Ei.ShellShowcaseListing) {
      _builder.addFeatured(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing featured = 2;</code>
     * @param value The featured to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFeatured")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, FeaturedProxy>.plusAssign(value: ei.Ei.ShellShowcaseListing) {
      add(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing featured = 2;</code>
     * @param values The featured to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFeatured")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, FeaturedProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListing>) {
      _builder.addAllFeatured(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing featured = 2;</code>
     * @param values The featured to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFeatured")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, FeaturedProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListing>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing featured = 2;</code>
     * @param index The index to set the value at.
     * @param value The featured to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFeatured")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, FeaturedProxy>.set(index: kotlin.Int, value: ei.Ei.ShellShowcaseListing) {
      _builder.setFeatured(index, value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing featured = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFeatured")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, FeaturedProxy>.clear() {
      _builder.clearFeatured()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RandomProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ei.ShellShowcaseListing random = 3;</code>
     */
     public val random: com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, RandomProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRandomList()
      )
    /**
     * <code>repeated .ei.ShellShowcaseListing random = 3;</code>
     * @param value The random to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRandom")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, RandomProxy>.add(value: ei.Ei.ShellShowcaseListing) {
      _builder.addRandom(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing random = 3;</code>
     * @param value The random to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRandom")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, RandomProxy>.plusAssign(value: ei.Ei.ShellShowcaseListing) {
      add(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing random = 3;</code>
     * @param values The random to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRandom")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, RandomProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListing>) {
      _builder.addAllRandom(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing random = 3;</code>
     * @param values The random to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRandom")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, RandomProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListing>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing random = 3;</code>
     * @param index The index to set the value at.
     * @param value The random to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRandom")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, RandomProxy>.set(index: kotlin.Int, value: ei.Ei.ShellShowcaseListing) {
      _builder.setRandom(index, value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListing random = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRandom")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListing, RandomProxy>.clear() {
      _builder.clearRandom()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellShowcase.copy(block: ei.ShellShowcaseKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellShowcase =
  ei.ShellShowcaseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

