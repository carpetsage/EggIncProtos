//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmName("-initializevector4")
public inline fun vector4(block: ei.Vector4Kt.Dsl.() -> kotlin.Unit): ei.Ei.Vector4 =
  ei.Vector4Kt.Dsl._create(ei.Ei.Vector4.newBuilder()).apply { block() }._build()
public object Vector4Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.Vector4.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.Vector4.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.Vector4 = _builder.build()

    /**
     * <code>optional float x = 1;</code>
     */
    public var x: kotlin.Float
      @JvmName("getX")
      get() = _builder.getX()
      @JvmName("setX")
      set(value) {
        _builder.setX(value)
      }
    /**
     * <code>optional float x = 1;</code>
     */
    public fun clearX() {
      _builder.clearX()
    }
    /**
     * <code>optional float x = 1;</code>
     * @return Whether the x field is set.
     */
    public fun hasX(): kotlin.Boolean {
      return _builder.hasX()
    }

    /**
     * <code>optional float y = 2;</code>
     */
    public var y: kotlin.Float
      @JvmName("getY")
      get() = _builder.getY()
      @JvmName("setY")
      set(value) {
        _builder.setY(value)
      }
    /**
     * <code>optional float y = 2;</code>
     */
    public fun clearY() {
      _builder.clearY()
    }
    /**
     * <code>optional float y = 2;</code>
     * @return Whether the y field is set.
     */
    public fun hasY(): kotlin.Boolean {
      return _builder.hasY()
    }

    /**
     * <code>optional float z = 3;</code>
     */
    public var z: kotlin.Float
      @JvmName("getZ")
      get() = _builder.getZ()
      @JvmName("setZ")
      set(value) {
        _builder.setZ(value)
      }
    /**
     * <code>optional float z = 3;</code>
     */
    public fun clearZ() {
      _builder.clearZ()
    }
    /**
     * <code>optional float z = 3;</code>
     * @return Whether the z field is set.
     */
    public fun hasZ(): kotlin.Boolean {
      return _builder.hasZ()
    }

    /**
     * <code>optional float w = 4;</code>
     */
    public var w: kotlin.Float
      @JvmName("getW")
      get() = _builder.getW()
      @JvmName("setW")
      set(value) {
        _builder.setW(value)
      }
    /**
     * <code>optional float w = 4;</code>
     */
    public fun clearW() {
      _builder.clearW()
    }
    /**
     * <code>optional float w = 4;</code>
     * @return Whether the w field is set.
     */
    public fun hasW(): kotlin.Boolean {
      return _builder.hasW()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.Vector4.copy(block: ei.Vector4Kt.Dsl.() -> kotlin.Unit): ei.Ei.Vector4 =
  ei.Vector4Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

