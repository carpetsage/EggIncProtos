//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmName("-initializecollectContractArtifactRewardsRequest")
public inline fun collectContractArtifactRewardsRequest(block: ei.CollectContractArtifactRewardsRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.CollectContractArtifactRewardsRequest =
  ei.CollectContractArtifactRewardsRequestKt.Dsl._create(ei.Ei.CollectContractArtifactRewardsRequest.newBuilder()).apply { block() }._build()
public object CollectContractArtifactRewardsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.CollectContractArtifactRewardsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.CollectContractArtifactRewardsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.CollectContractArtifactRewardsRequest = _builder.build()

    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 1;</code>
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @JvmName("getRinfo")
      get() = _builder.getRinfo()
      @JvmName("setRinfo")
      set(value) {
        _builder.setRinfo(value)
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 1;</code>
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 1;</code>
     * @return Whether the rinfo field is set.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }
    public val CollectContractArtifactRewardsRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * <code>optional string contract_identifier = 2;</code>
     */
    public var contractIdentifier: kotlin.String
      @JvmName("getContractIdentifier")
      get() = _builder.getContractIdentifier()
      @JvmName("setContractIdentifier")
      set(value) {
        _builder.setContractIdentifier(value)
      }
    /**
     * <code>optional string contract_identifier = 2;</code>
     */
    public fun clearContractIdentifier() {
      _builder.clearContractIdentifier()
    }
    /**
     * <code>optional string contract_identifier = 2;</code>
     * @return Whether the contractIdentifier field is set.
     */
    public fun hasContractIdentifier(): kotlin.Boolean {
      return _builder.hasContractIdentifier()
    }

    /**
     * <code>optional uint32 league = 5;</code>
     */
    public var league: kotlin.Int
      @JvmName("getLeague")
      get() = _builder.getLeague()
      @JvmName("setLeague")
      set(value) {
        _builder.setLeague(value)
      }
    /**
     * <code>optional uint32 league = 5;</code>
     */
    public fun clearLeague() {
      _builder.clearLeague()
    }
    /**
     * <code>optional uint32 league = 5;</code>
     * @return Whether the league field is set.
     */
    public fun hasLeague(): kotlin.Boolean {
      return _builder.hasLeague()
    }

    /**
     * <code>optional .ei.Contract.PlayerGrade grade = 6;</code>
     */
    public var grade: ei.Ei.Contract.PlayerGrade
      @JvmName("getGrade")
      get() = _builder.getGrade()
      @JvmName("setGrade")
      set(value) {
        _builder.setGrade(value)
      }
    /**
     * <code>optional .ei.Contract.PlayerGrade grade = 6;</code>
     */
    public fun clearGrade() {
      _builder.clearGrade()
    }
    /**
     * <code>optional .ei.Contract.PlayerGrade grade = 6;</code>
     * @return Whether the grade field is set.
     */
    public fun hasGrade(): kotlin.Boolean {
      return _builder.hasGrade()
    }

    /**
     * <code>optional uint32 goal_index = 3;</code>
     */
    public var goalIndex: kotlin.Int
      @JvmName("getGoalIndex")
      get() = _builder.getGoalIndex()
      @JvmName("setGoalIndex")
      set(value) {
        _builder.setGoalIndex(value)
      }
    /**
     * <code>optional uint32 goal_index = 3;</code>
     */
    public fun clearGoalIndex() {
      _builder.clearGoalIndex()
    }
    /**
     * <code>optional uint32 goal_index = 3;</code>
     * @return Whether the goalIndex field is set.
     */
    public fun hasGoalIndex(): kotlin.Boolean {
      return _builder.hasGoalIndex()
    }

    /**
     * <code>optional .ei.MissionInfo.Spaceship best_ship = 4;</code>
     */
    public var bestShip: ei.Ei.MissionInfo.Spaceship
      @JvmName("getBestShip")
      get() = _builder.getBestShip()
      @JvmName("setBestShip")
      set(value) {
        _builder.setBestShip(value)
      }
    /**
     * <code>optional .ei.MissionInfo.Spaceship best_ship = 4;</code>
     */
    public fun clearBestShip() {
      _builder.clearBestShip()
    }
    /**
     * <code>optional .ei.MissionInfo.Spaceship best_ship = 4;</code>
     * @return Whether the bestShip field is set.
     */
    public fun hasBestShip(): kotlin.Boolean {
      return _builder.hasBestShip()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CollectContractArtifactRewardsRequest.copy(block: ei.CollectContractArtifactRewardsRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.CollectContractArtifactRewardsRequest =
  ei.CollectContractArtifactRewardsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val ei.Ei.CollectContractArtifactRewardsRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null

