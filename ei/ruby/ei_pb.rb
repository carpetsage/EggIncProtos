# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ei.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("ei.proto", :syntax => :proto2) do
    add_message "ei.Backup" do
      optional :user_id, :string, 1
      optional :ei_user_id, :string, 18
      optional :game_services_id, :string, 16
      optional :device_id, :string, 17
      optional :user_name, :string, 2
      optional :approx_time, :double, 3
      optional :version, :uint32, 21, default: 0
      optional :force_offer_backup, :bool, 20
      optional :force_backup, :bool, 22
      optional :settings, :message, 4, "ei.Backup.Settings"
      optional :tutorial, :message, 5, "ei.Backup.Tutorial"
      optional :stats, :message, 6, "ei.Backup.Stats"
      optional :game, :message, 7, "ei.Backup.Game"
      optional :artifacts, :message, 14, "ei.Backup.Artifacts"
      optional :sim, :message, 8, "ei.Backup.Simulation"
      repeated :farms, :message, 12, "ei.Backup.Simulation"
      optional :mission, :message, 9, "ei.Backup.Mission"
      optional :misc, :message, 10, "ei.Backup.Misc"
      optional :contracts, :message, 13, "ei.MyContracts"
      optional :artifacts_db, :message, 15, "ei.ArtifactsDB"
      optional :shell_db, :message, 24, "ei.ShellDB"
      repeated :read_mail_ids, :string, 23
      optional :checksum, :uint64, 100
      optional :signature, :string, 101
    end
    add_message "ei.Backup.Settings" do
      optional :sfx, :bool, 1
      optional :music, :bool, 2
      optional :low_battery_mode, :bool, 3
      optional :low_performance_mode, :bool, 4
      optional :force_touch_chicken_btn, :bool, 9
      optional :notifications_queried, :bool, 5
      optional :notifications_on, :bool, 6
      optional :notify_daily_gift, :bool, 11
      optional :coppa_queried, :bool, 7
      optional :coppa_restricted, :bool, 8
      optional :gdpr_consent_queried, :bool, 12
      optional :gdpr_age_restricted, :bool, 16
      optional :gdpr_consent_given, :bool, 13
      optional :age_queried, :bool, 18
      optional :age_restricted, :bool, 19, default: false
      optional :data_collection_consent_queried, :bool, 20
      optional :data_collection_consent_given, :bool, 21
      optional :last_day_age_queried, :uint32, 17
      optional :user_ads_enabled, :bool, 14, default: true
      optional :user_cloud_enabled, :bool, 15, default: true
      optional :user_analytics_enabled, :bool, 22, default: true
      optional :user_personalized_ads_enabled, :bool, 23, default: true
      optional :low_performance, :bool, 10
      optional :auto_stop_fueling, :bool, 25
      optional :last_backup_time, :double, 24
    end
    add_message "ei.Backup.Tutorial" do
      optional :intro_shown, :bool, 1
      optional :click_tutorial_shown, :bool, 2
      optional :buy_hab_shown, :bool, 3
      optional :hire_vehicle_shown, :bool, 4
      optional :q_num_shown, :bool, 5
      optional :s_num_shown, :bool, 6
      optional :contracts_tab_shown, :bool, 7
      optional :contract_info_shown, :bool, 8
      optional :join_coop_shown, :bool, 9
      optional :switch_farm_shown, :bool, 10
      repeated :tutorial_shown, :bool, 11
    end
    add_message "ei.Backup.Stats" do
      repeated :egg_totals_OLD, :uint64, 1
      repeated :egg_totals, :double, 8
      optional :unlimited_chickens_uses, :uint64, 7
      optional :refill_uses, :uint64, 2
      optional :warp_1_uses, :uint64, 4
      optional :warp_8_uses, :uint64, 5
      optional :boosts_used, :uint64, 13
      optional :video_doubler_uses, :uint64, 3
      optional :drone_takedowns, :uint64, 6
      optional :drone_takedowns_elite, :uint64, 10
      optional :num_prestiges, :uint64, 9
      optional :num_piggy_breaks, :uint64, 11
      optional :iap_packs_purchased, :uint64, 12
      optional :piggy_full, :bool, 14
      optional :piggy_found_full, :bool, 15
      optional :time_piggy_filled_realtime, :double, 16
      optional :time_piggy_full_gametime, :double, 17
      optional :lost_piggy_increments, :uint64, 18
    end
    add_message "ei.Backup.Game" do
      optional :current_farm, :uint32, 22, default: 0
      optional :max_egg_reached, :enum, 1, "ei.Egg"
      optional :golden_eggs_earned, :uint64, 2
      optional :golden_eggs_spent, :uint64, 3
      optional :uncliamed_golden_eggs, :uint64, 16
      optional :soul_eggs, :uint64, 4
      optional :unclaimed_soul_eggs, :uint64, 17
      optional :soul_eggs_d, :double, 34
      optional :unclaimed_soul_eggs_d, :double, 35
      optional :eggs_of_prophecy, :uint64, 23
      optional :unclaimed_eggs_of_prophecy, :uint64, 24
      optional :prestige_cash_earned, :double, 5
      optional :prestige_soul_boost_cash, :double, 33
      optional :lifetime_cash_earned, :double, 6
      optional :piggy_bank, :uint64, 7
      optional :piggy_full_alert_shown, :bool, 31
      optional :permit_level, :uint32, 8
      repeated :epic_research, :message, 9, "ei.Backup.ResearchItem"
      optional :hyperloop_station, :bool, 29
      optional :next_daily_gift_time, :double, 10
      optional :last_daily_gift_collected_day, :uint32, 20
      optional :num_daily_gifts_collected, :uint32, 28
      repeated :news, :message, 11, "ei.Backup.NewsHeadline"
      optional :last_news_time, :double, 12
      optional :current_multiplier, :double, 13
      optional :current_multiplier_expiration, :double, 14
      repeated :achievements, :message, 15, "ei.Backup.AchievementInfo"
      repeated :max_farm_size_reached, :uint64, 18
      repeated :egg_medal_level, :uint32, 19
      optional :long_idle_notification_set, :bool, 25
      optional :long_idle_notification_threshold, :double, 26
      optional :long_idle_reward, :double, 27
      repeated :boosts, :message, 30, "ei.Backup.OwnedBoost"
      optional :total_time_cheats_detected, :uint32, 32
      optional :force_elite_contracts, :bool, 36
      optional :new_player_event_end_time, :double, 37
    end
    add_message "ei.Backup.Artifacts" do
      optional :infusing, :bool, 1
      optional :item_being_infused, :message, 2, "ei.ArtifactInventoryItem"
      optional :spec_being_infused, :message, 13, "ei.ArtifactSpec"
      optional :egg_type_infusing, :enum, 3, "ei.Egg"
      optional :infusing_eggs_required, :double, 4
      optional :eggs_infused, :double, 5
      optional :flow_percentage_artifacts, :double, 6, default: 0.5
      optional :fueling_enabled, :bool, 7, default: true
      optional :tank_filling_enabled, :bool, 14
      optional :tank_level, :uint32, 15
      repeated :tank_fuels, :double, 16
      optional :last_fueled_ship, :enum, 9, "ei.MissionInfo.Spaceship"
      optional :inventory_score, :double, 10
      optional :enabled, :bool, 11
      optional :intro_shown, :bool, 12
      optional :infusing_enabled_DEPRECATED, :bool, 8, default: true
    end
    add_message "ei.Backup.Simulation" do
      optional :egg_type, :enum, 1, "ei.Egg"
      optional :farm_type, :enum, 19, "ei.FarmType"
      optional :contract_id, :string, 20
      optional :cash_earned, :double, 2
      optional :cash_spent, :double, 3
      optional :unclaimed_cash, :double, 4
      optional :last_step_time, :double, 5
      optional :num_chickens, :uint64, 6
      optional :num_chickens_unsettled, :uint64, 7
      optional :num_chickens_running, :uint64, 8
      optional :eggs_laid, :double, 9
      optional :eggs_shipped, :double, 30
      optional :eggs_paid_for, :double, 10
      optional :silos_owned, :uint32, 11
      repeated :habs, :uint32, 12
      repeated :hab_population, :uint64, 13
      repeated :hab_population_indound, :uint64, 14
      repeated :hab_incubator_popuplation, :double, 15
      optional :hatchery_population, :double, 16
      repeated :vehicles, :uint32, 17
      repeated :train_length, :uint32, 21
      repeated :common_research, :message, 18, "ei.Backup.ResearchItem"
      repeated :active_boosts, :message, 22, "ei.Backup.ActiveBoost"
      optional :last_cash_boost_time, :double, 31
      optional :time_cheats_detected, :uint32, 23
      optional :time_cheat_debt, :double, 24
      optional :boost_tokens_received, :uint32, 25
      optional :boost_tokens_spent, :uint32, 26
      optional :boost_tokens_given, :uint32, 28
      optional :unclaimed_boost_tokens, :uint32, 27
      optional :gametime_until_next_boost_token, :double, 29
    end
    add_message "ei.Backup.Mission" do
      optional :current_mission, :string, 1
      optional :reference_value, :double, 2
      repeated :current_missions, :string, 4
      repeated :missions, :message, 3, "ei.Backup.MissionInfo"
    end
    add_message "ei.Backup.Misc" do
      optional :chicken_btn_pref_big, :bool, 1
      optional :free_hatchery_refill_given, :bool, 2
      optional :last_share_farm_value, :double, 3, default: 1e+07
      optional :last_share_swarm_farm_value, :double, 4, default: 1e+07
      optional :last_share_swarm_size, :double, 5, default: 140
      optional :last_prestige_alert_soul_eggs_DEPRECATED, :uint64, 10, default: 45
      optional :friend_rank, :uint64, 6
      optional :friend_rank_pop, :uint64, 7
      optional :global_rank, :uint64, 8
      optional :global_rank_pop, :uint64, 9
      optional :challenges_alert, :bool, 20
      optional :trophy_alert, :bool, 11
      optional :ar_alert, :bool, 12
      optional :contracts_alert, :bool, 13
      optional :coop_alert, :bool, 14
      optional :switch_alert, :bool, 15
      optional :egg_of_prophecy_alert, :bool, 16
      optional :boost_token_alert, :bool, 17
      optional :soul_egg_alert, :bool, 18
      optional :backup_reminder_alert, :bool, 19
    end
    add_message "ei.Backup.ResearchItem" do
      optional :id, :string, 1
      optional :level, :uint32, 2
    end
    add_message "ei.Backup.NewsHeadline" do
      optional :id, :string, 1
      optional :read, :bool, 2
    end
    add_message "ei.Backup.AchievementInfo" do
      optional :id, :string, 1
      optional :achieved, :bool, 2
    end
    add_message "ei.Backup.ActiveBoost" do
      optional :boost_id, :string, 1
      optional :time_remaining, :double, 2
      optional :reference_value, :double, 3
    end
    add_message "ei.Backup.OwnedBoost" do
      optional :boost_id, :string, 1
      optional :count, :uint32, 2
    end
    add_message "ei.Backup.MissionInfo" do
      optional :id, :string, 1
      optional :completed, :bool, 2
      optional :reference_value, :double, 3
    end
    add_message "ei.EggIncFirstContactRequest" do
      optional :rinfo, :message, 8, "ei.BasicRequestInfo"
      optional :ei_user_id, :string, 4
      optional :user_id, :string, 1
      optional :game_services_id, :string, 7
      optional :device_id, :string, 5
      optional :username, :string, 6
      optional :client_version, :uint32, 2
      optional :platform, :enum, 3, "ei.Platform"
    end
    add_message "ei.EggIncFirstContactResponse" do
      optional :ei_user_id, :string, 2
      repeated :ids_transferred, :string, 3
      optional :error_code, :uint32, 4, default: 0
      optional :error_message, :string, 5
      optional :backup, :message, 1, "ei.Backup"
    end
    add_enum "ei.EggIncFirstContactResponse.ErrorCodes" do
      value :NO_ERROR, 0
      value :EXISTING_USER_W_GAMER_ID, 1
      value :USER_NOT_FOUND, 2
      value :BACKUP_CONFLICT, 3
    end
    add_message "ei.EggIncAdConfig" do
      repeated :network_priority, :enum, 1, "ei.AdNetwork"
    end
    add_message "ei.DailyGiftInfo" do
      optional :current_day, :uint32, 1
      optional :seconds_to_next_day, :double, 2
    end
    add_message "ei.SalesInfoRequest" do
      optional :user_id, :string, 1
      optional :piggy_full, :bool, 2
      optional :piggy_found_full, :bool, 3
      optional :seconds_full_realtime, :double, 4
      optional :seconds_full_gametime, :double, 5
      optional :lost_increments, :uint32, 7
      optional :current_client_version, :uint32, 10
    end
    add_message "ei.IAPSaleEntry" do
      optional :product_id, :string, 1
      optional :seconds_remaining, :double, 2
      optional :discount_string, :string, 3
      optional :sale_id, :string, 4
    end
    add_message "ei.SalesInfo" do
      repeated :sales, :message, 1, "ei.IAPSaleEntry"
    end
    add_message "ei.EggIncEvent" do
      optional :identifier, :string, 1
      optional :seconds_remaining, :double, 2
      optional :type, :string, 3
      optional :multiplier, :double, 4
      optional :subtitle, :string, 5
      optional :start_time, :double, 6
      optional :duration, :double, 7
    end
    add_message "ei.EggIncCurrentEvents" do
      repeated :events, :message, 1, "ei.EggIncEvent"
    end
    add_message "ei.DeviceInfo" do
      optional :device_id, :string, 1
      optional :advertising_id, :string, 13
      optional :platform, :string, 2
      optional :form_factor, :string, 3
      optional :device_name, :string, 4
      optional :platform_version, :string, 5
      optional :locale_country, :string, 6
      optional :locale_language, :string, 7
      optional :gpu_vendor, :string, 8
      optional :gpu_model, :string, 9
      optional :device_bucket, :string, 10
      optional :screen_width, :uint32, 11
      optional :screen_height, :uint32, 12
    end
    add_message "ei.AppInfo" do
      optional :version_str, :string, 1
      optional :sessions, :uint32, 2
      optional :num_prestiges, :uint32, 3
      optional :soul_eggs, :uint64, 4
      optional :current_egg, :uint32, 5
      optional :gold_earned, :uint64, 6
      optional :gold_spent, :uint64, 7
      optional :current_mission, :uint32, 8
      optional :piggy_size, :uint32, 9
      optional :num_piggy_breaks, :uint64, 10
      optional :verified_piggy_breaks, :uint64, 29
      optional :iap_packs_purchased, :uint64, 11
      optional :permit_level, :uint32, 12
      optional :video_doubler_uses, :uint64, 15
      optional :drone_takedowns, :uint64, 18
      optional :drone_takedowns_elite, :uint64, 19
      optional :trophies_unlocked, :bool, 20
      optional :egg_level, :float, 21
      optional :struggle_factor, :float, 22
      optional :piggy_full, :bool, 23
      optional :piggy_found_full, :bool, 24
      optional :time_piggy_full_realtime, :double, 25
      optional :time_piggy_full_gametime, :double, 26
      optional :lost_piggy_increments, :uint64, 27
      optional :sale_id, :string, 28
      optional :unlimited_chickens_uses, :uint64, 13
      optional :refill_uses, :uint64, 14
      optional :short_warp_uses, :uint64, 16
      optional :long_warp_uses, :uint64, 17
    end
    add_message "ei.ActionKeyValuePair" do
      required :key, :string, 1
      required :value, :string, 2
    end
    add_message "ei.GenericAction" do
      optional :user_id, :string, 1
      optional :advertising_id, :string, 7
      optional :approx_time_DEP, :float, 2
      optional :approx_time, :double, 8
      optional :action_name, :string, 3
      repeated :data, :message, 4, "ei.ActionKeyValuePair"
      optional :app, :message, 5, "ei.AppInfo"
      optional :device, :message, 6, "ei.DeviceInfo"
    end
    add_message "ei.VerifyPurchaseRequest" do
      optional :rinfo, :message, 6, "ei.BasicRequestInfo"
      optional :sku, :string, 1
      optional :transaction_id, :string, 2
      optional :receipt, :string, 3
      optional :platform, :string, 4
      optional :log, :message, 5, "ei.GenericAction"
    end
    add_message "ei.VerifyPurchaseResponse" do
      optional :verified, :bool, 1
      optional :message, :string, 2
    end
    add_message "ei.Reward" do
      optional :reward_type, :enum, 1, "ei.RewardType"
      optional :reward_sub_type, :string, 2
      optional :reward_amount, :double, 3
    end
    add_message "ei.Contract" do
      optional :identifier, :string, 1
      optional :name, :string, 9
      optional :description, :string, 10
      optional :egg, :enum, 2, "ei.Egg"
      repeated :goals, :message, 3, "ei.Contract.Goal"
      repeated :goal_sets, :message, 16, "ei.Contract.GoalSet"
      optional :coop_allowed, :bool, 4
      optional :max_coop_size, :uint32, 5
      optional :max_boosts, :uint32, 12
      optional :minutes_per_token, :double, 15, default: 60
      optional :start_time, :double, 17
      optional :expiration_time, :double, 6
      optional :length_seconds, :double, 7
      optional :max_soul_eggs, :double, 13
      optional :min_client_version, :uint32, 14
      optional :debug, :bool, 11
    end
    add_message "ei.Contract.Goal" do
      optional :type, :enum, 1, "ei.GoalType"
      optional :target_amount, :double, 2
      optional :reward_type, :enum, 3, "ei.RewardType"
      optional :reward_sub_type, :string, 4
      optional :reward_amount, :double, 5
      optional :target_soul_eggs, :double, 6
    end
    add_message "ei.Contract.GoalSet" do
      repeated :goals, :message, 1, "ei.Contract.Goal"
    end
    add_message "ei.BasicRequestInfo" do
      optional :ei_user_id, :string, 1
      optional :client_version, :uint32, 2
      optional :version, :string, 3
      optional :build, :string, 4
      optional :platform, :string, 5
      optional :country, :string, 6
      optional :language, :string, 7
    end
    add_message "ei.ContractsRequest" do
      optional :soul_eggs, :double, 1
      optional :client_version, :uint32, 5
    end
    add_message "ei.ContractsResponse" do
      repeated :contracts, :message, 1, "ei.Contract"
      optional :warning_message, :string, 4
      optional :server_time, :double, 2
      optional :max_eop, :uint32, 3, default: 1000
    end
    add_message "ei.ContractCoopStatusRequest" do
      optional :rinfo, :message, 5, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :coop_identifier, :string, 2
      optional :user_id, :string, 3
      optional :client_version, :uint32, 4
    end
    add_message "ei.FarmProductionParams" do
      optional :farm_population, :double, 1
      optional :farm_capacity, :double, 2
      optional :elr, :double, 3
      optional :ihr, :double, 4
      optional :sr, :double, 5
      optional :delivered, :double, 6
    end
    add_message "ei.ContractCoopStatusResponse" do
      optional :contract_identifier, :string, 1
      optional :total_amount, :double, 2
      optional :coop_identifier, :string, 3
      repeated :contributors, :message, 4, "ei.ContractCoopStatusResponse.ContributionInfo"
      optional :auto_generated, :bool, 8
      optional :public, :bool, 10
      optional :creator_id, :string, 9
      optional :seconds_remaining, :double, 5
      optional :all_members_reporting, :bool, 6
      optional :grace_period_seconds_remaining, :double, 7
      repeated :gifts, :message, 11, "ei.ContractCoopStatusResponse.CoopGift"
      optional :local_timestamp, :double, 12
    end
    add_message "ei.ContractCoopStatusResponse.ContributionInfo" do
      optional :user_id, :string, 1
      optional :user_name, :string, 2
      optional :contribution_amount, :double, 3
      optional :contribution_rate, :double, 6
      optional :soul_power, :double, 11
      optional :production_params, :message, 15, "ei.FarmProductionParams"
      optional :rank_change, :int32, 8
      optional :active, :bool, 4
      optional :leech, :bool, 16
      optional :time_cheat_detected, :bool, 7
      optional :platform, :enum, 5, "ei.Platform"
      optional :push_id, :string, 9
      optional :ban_votes, :uint32, 10
      optional :autojoined, :bool, 17
      optional :boost_tokens, :uint32, 12
      optional :boost_tokens_spent, :uint32, 14
      repeated :buff_history, :message, 13, "ei.CoopBuffState"
    end
    add_message "ei.ContractCoopStatusResponse.CoopGift" do
      optional :user_id, :string, 1
      optional :user_name, :string, 3
      optional :amount, :uint32, 2
    end
    add_enum "ei.ContractCoopStatusResponse.MemberStatus" do
      value :VALID, 0
      value :KICKED_INACTIVE, 1
      value :KICKED_PRIVATE, 2
      value :KICKED_CHEATS, 3
      value :KICKED_LEECH, 4
    end
    add_message "ei.LocalContract" do
      optional :contract, :message, 1, "ei.Contract"
      optional :coop_identifier, :string, 2
      optional :accepted, :bool, 7
      optional :time_accepted, :double, 3
      optional :cancelled, :bool, 4
      optional :new, :bool, 8
      optional :coop_shared_end_time, :double, 5
      optional :coop_grace_period_end_time, :double, 9
      optional :coop_contribution_finalized, :bool, 10
      optional :coop_last_uploaded_contribution, :double, 11
      optional :coop_user_id, :string, 13
      optional :last_amount_when_reward_given, :double, 6
      optional :num_goals_achieved, :uint32, 14
      optional :boosts_used, :uint32, 12
      optional :league, :uint32, 15
      optional :last_nag_time, :double, 16
    end
    add_message "ei.MyContracts" do
      repeated :contract_ids_seen, :string, 3
      repeated :contracts, :message, 1, "ei.LocalContract"
      repeated :archive, :message, 2, "ei.LocalContract"
      repeated :current_coop_statuses, :message, 4, "ei.ContractCoopStatusResponse"
    end
    add_message "ei.QueryCoopRequest" do
      optional :rinfo, :message, 5, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :coop_identifier, :string, 2
      optional :league, :uint32, 4
      optional :client_version, :uint32, 3
    end
    add_message "ei.QueryCoopResponse" do
      optional :exists, :bool, 1
      optional :full, :bool, 2
      optional :expired, :bool, 5
      optional :different_league, :bool, 4
      optional :banned, :bool, 3
    end
    add_message "ei.CreateCoopRequest" do
      optional :rinfo, :message, 10, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :coop_identifier, :string, 2
      optional :seconds_remaining, :double, 3
      optional :user_id, :string, 4
      optional :user_name, :string, 5
      optional :soul_power, :double, 8
      optional :eop, :double, 11
      optional :league, :uint32, 9
      optional :platform, :enum, 6, "ei.Platform"
      optional :client_version, :uint32, 7
    end
    add_message "ei.CreateCoopResponse" do
      optional :success, :bool, 1
      optional :message, :string, 2
    end
    add_message "ei.JoinCoopRequest" do
      optional :rinfo, :message, 10, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :coop_identifier, :string, 2
      optional :user_id, :string, 3
      optional :user_name, :string, 4
      optional :soul_power, :double, 8
      optional :eop, :double, 12
      optional :league, :uint32, 9
      optional :platform, :enum, 5, "ei.Platform"
      optional :seconds_remaining, :double, 11
      optional :client_version, :uint32, 7
    end
    add_message "ei.JoinCoopResponse" do
      optional :success, :bool, 1
      optional :message, :string, 2
      optional :banned, :bool, 4
      optional :coop_identifier, :string, 5
      optional :seconds_remaining, :double, 3
      optional :match_percent, :double, 6
      optional :num_members, :uint32, 7
    end
    add_message "ei.AutoJoinCoopRequest" do
      optional :rinfo, :message, 9, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :user_id, :string, 2
      optional :user_name, :string, 3
      optional :soul_power, :double, 4
      optional :eop, :double, 10
      optional :league, :uint32, 8
      optional :seconds_remaining, :double, 5
      optional :platform, :enum, 6, "ei.Platform"
      optional :client_version, :uint32, 7
    end
    add_message "ei.UpdateCoopPermissionsRequest" do
      optional :rinfo, :message, 6, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :coop_identifier, :string, 2
      optional :requesting_user_id, :string, 3
      optional :public, :bool, 4
      optional :client_version, :uint32, 5
    end
    add_message "ei.UpdateCoopPermissionsResponse" do
      optional :success, :bool, 1
      optional :message, :string, 2
    end
    add_message "ei.LeaveCoopRequest" do
      optional :rinfo, :message, 8, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :coop_identifier, :string, 2
      optional :player_identifier, :string, 3
      optional :client_version, :uint32, 7
    end
    add_message "ei.GiftPlayerCoopRequest" do
      optional :rinfo, :message, 8, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :coop_identifier, :string, 2
      optional :player_identifier, :string, 3
      optional :requesting_user_id, :string, 4
      optional :requesting_user_name, :string, 6
      optional :amount, :uint32, 5
      optional :client_version, :uint32, 7
    end
    add_message "ei.KickPlayerCoopRequest" do
      optional :rinfo, :message, 8, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 1
      optional :coop_identifier, :string, 2
      optional :player_identifier, :string, 3
      optional :requesting_user_id, :string, 4
      optional :reason, :enum, 9, "ei.KickPlayerCoopRequest.Reason"
      optional :client_version, :uint32, 7
    end
    add_enum "ei.KickPlayerCoopRequest.Reason" do
      value :INVALID, 0
      value :CHEATER, 1
      value :IDLE, 2
      value :LEECH, 3
      value :PRIVATE, 4
    end
    add_message "ei.ContractCoopStatusUpdateRequest" do
      optional :rinfo, :message, 12, "ei.BasicRequestInfo"
      optional :user_id, :string, 1
      optional :contract_identifier, :string, 2
      optional :coop_identifier, :string, 3
      optional :push_user_id, :string, 8
      optional :amount, :double, 4
      optional :rate, :double, 5
      optional :time_cheats_detected, :uint32, 6
      optional :soul_power, :double, 7
      optional :eop, :uint32, 15
      optional :boost_tokens, :uint32, 9
      optional :boost_tokens_spent, :uint32, 13
      optional :production_params, :message, 14, "ei.FarmProductionParams"
      optional :egg_laying_rate_buff, :double, 10, default: 1
      optional :earnings_buff, :double, 11, default: 1
    end
    add_message "ei.ContractCoopStatusUpdateResponse" do
      optional :finalized, :bool, 1
      optional :exists, :bool, 2
      optional :status, :enum, 3, "ei.ContractCoopStatusResponse.MemberStatus"
    end
    add_message "ei.CoopBuffState" do
      optional :egg_laying_rate, :double, 1, default: 1
      optional :earnings, :double, 2, default: 1
      optional :server_timestamp, :double, 3
    end
    add_message "ei.CoopBuffHistory" do
      repeated :history, :message, 1, "ei.CoopBuffState"
    end
    add_message "ei.UserDataInfoRequest" do
      optional :rinfo, :message, 4, "ei.BasicRequestInfo"
      optional :user_id, :string, 1
      optional :device_id, :string, 2
      optional :backup_checksum, :uint64, 3
    end
    add_message "ei.UserDataInfoResponse" do
      optional :backup_checksum, :uint64, 1
      optional :backup_total_cash, :double, 2
      repeated :coop_memberships, :string, 3
    end
    add_message "ei.ClearAllUserDataRequest" do
      optional :rinfo, :message, 4, "ei.BasicRequestInfo"
      optional :user_id, :string, 1
      optional :device_id, :string, 2
      optional :backup_checksum, :uint64, 3
    end
    add_message "ei.ServerGift" do
      optional :user_id, :string, 1
      optional :reward_type, :enum, 3, "ei.RewardType"
      optional :reward_sub_type, :string, 4
      optional :reward_amount, :double, 5
    end
    add_message "ei.LiveConfig" do
      optional :config_id, :string, 1
      optional :boosts_config, :message, 2, "ei.LiveConfig.BoostsConfig"
      optional :gift_config, :message, 3, "ei.LiveConfig.GiftConfig"
      optional :misc_config, :message, 4, "ei.LiveConfig.MiscConfig"
    end
    add_message "ei.LiveConfig.BoostsConfig" do
      repeated :item_configs, :message, 1, "ei.LiveConfig.BoostsConfig.ItemConfig"
      optional :cash_boost_cooloff_time, :double, 2
    end
    add_message "ei.LiveConfig.BoostsConfig.ItemConfig" do
      optional :boost_id, :string, 1
      optional :price, :uint32, 2
      optional :token_price, :uint32, 3
      optional :se_required, :double, 4
    end
    add_message "ei.LiveConfig.GiftConfig" do
      repeated :gift_configs, :message, 9, "ei.LiveConfig.GiftConfig.GiftValueConfig"
      optional :gift_mu_min_spent, :double, 10
      optional :gift_mu_max_spent, :double, 11
      optional :gift_mu_overall_mult, :double, 12
      optional :random_gift_mu_config, :message, 15, "ei.LiveConfig.GiftConfig.GiftMuConfig"
      optional :video_gift_mu_config, :message, 16, "ei.LiveConfig.GiftConfig.GiftMuConfig"
      optional :package_interval, :double, 1
      optional :video_offer_interval, :double, 2
      optional :video_offer_interval_contract, :double, 3
      optional :video_offer_interval_piggy_full, :double, 4
      optional :video_offer_interval_piggy_extra_full, :double, 5
      optional :video_reset_on_idle, :bool, 14
      optional :package_interval_contract, :double, 6
      optional :package_interval_piggy_full, :double, 7
      optional :package_interval_piggy_extra_full, :double, 8
      optional :package_reset_on_idle, :bool, 13
    end
    add_message "ei.LiveConfig.GiftConfig.GiftValueConfig" do
      optional :gift_id, :string, 1
      optional :amount, :double, 4
      optional :rand_min, :double, 2
      optional :rand_max, :double, 3
      optional :video_min, :double, 5
      optional :video_max, :double, 6
    end
    add_message "ei.LiveConfig.GiftConfig.GiftMuConfig" do
      optional :min_spent, :double, 1
      optional :max_spent, :double, 2
      optional :overall_mult, :double, 3
    end
    add_message "ei.LiveConfig.MiscConfig" do
      optional :ask_to_track, :bool, 1
      optional :ask_to_track_min_soul_eggs, :double, 2
      optional :ask_to_track_message, :string, 3
      optional :ask_to_track_show_pre_dialog, :bool, 4
      optional :ask_to_track_after_privacy, :bool, 5
    end
    add_message "ei.InGameMail" do
      optional :id, :string, 1
      optional :title, :string, 2
      optional :date, :string, 8
      optional :message, :string, 3
      optional :action, :string, 4
      optional :url, :string, 5
      optional :platform, :uint32, 7
      repeated :builds, :string, 9
      optional :min_client_version, :uint32, 10
      optional :max_client_version, :uint32, 12
      optional :min_soul_eggs, :double, 11
      optional :min_mystical_bonus, :double, 13
      optional :gold_tip, :double, 6
    end
    add_message "ei.MailDB" do
      repeated :mail, :message, 1, "ei.InGameMail"
    end
    add_message "ei.PeriodicalsResponse" do
      optional :sales, :message, 1, "ei.SalesInfo"
      optional :events, :message, 2, "ei.EggIncCurrentEvents"
      optional :contracts, :message, 3, "ei.ContractsResponse"
      repeated :gifts, :message, 4, "ei.ServerGift"
      optional :live_config, :message, 5, "ei.LiveConfig"
      optional :mail_bag, :message, 6, "ei.MailDB"
    end
    add_message "ei.GetPeriodicalsRequest" do
      optional :rinfo, :message, 12, "ei.BasicRequestInfo"
      optional :user_id, :string, 1
      optional :piggy_full, :bool, 2
      optional :piggy_found_full, :bool, 3
      optional :seconds_full_realtime, :double, 4
      optional :seconds_full_gametime, :double, 5
      optional :lost_increments, :uint32, 7
      optional :soul_eggs, :double, 8
      optional :mystical_earnings_mult, :double, 13
      optional :eop, :uint32, 14
      optional :contracts_unlocked, :bool, 15
      optional :artifacts_unlocked, :bool, 16
      optional :current_client_version, :uint32, 10
      optional :debug, :bool, 11
    end
    add_message "ei.ConfigRequest" do
      optional :rinfo, :message, 1, "ei.BasicRequestInfo"
      optional :soul_eggs, :double, 2
      optional :artifacts_enabled, :bool, 3
      optional :fuel_tank_unlocked, :bool, 4
    end
    add_message "ei.ConfigResponse" do
      optional :live_config, :message, 1, "ei.LiveConfig"
      optional :mail_bag, :message, 2, "ei.MailDB"
      optional :dlc_catalog, :message, 3, "ei.DLCCatalog"
    end
    add_message "ei.AdAttributionRawData" do
      optional :device_ad_id, :string, 1
      optional :user_id, :string, 4
      optional :ad_network, :string, 2
      optional :json_data, :string, 3
    end
    add_message "ei.AdAttributionRow" do
      optional :user_id, :string, 1
      optional :ad_id, :string, 2
      optional :ad_network, :string, 3
      optional :campaign, :string, 4
      optional :keyword, :string, 5
      optional :extra, :string, 6
      optional :click_date, :float, 7
      optional :download_date, :float, 8
      optional :approx_time, :float, 9
    end
    add_message "ei.AdAttributionInfo" do
      optional :device_ad_id, :string, 1
      optional :network_name, :string, 2
      optional :attribution, :bool, 3
      optional :org_name, :string, 4
      optional :org_id, :string, 5
      optional :campaign_name, :string, 6
      optional :campaign_id, :string, 7
      optional :click_date, :string, 8
      optional :conversion_date, :string, 9
      optional :conversion_type, :string, 10
      optional :geo, :string, 11
      optional :adgroup_name, :string, 12
      optional :adgroup_id, :string, 13
      optional :keyword, :string, 14
      optional :keyword_id, :string, 15
      optional :keyword_extra, :string, 16
      optional :creativeset_name, :string, 17
      optional :creativeset_id, :string, 18
    end
    add_message "ei.ArtifactsClientInfo" do
      optional :mission_capacity_mult, :double, 1
      optional :mission_duration_mult, :double, 2
      optional :mission_ftl_duration_mult, :double, 4
      repeated :launch_counts, :message, 3, "ei.ArtifactsClientInfo.LaunchCount"
    end
    add_message "ei.ArtifactsClientInfo.LaunchCount" do
      optional :ship, :enum, 1, "ei.MissionInfo.Spaceship"
      optional :num_launches, :uint32, 2
      optional :launch_points, :double, 3
    end
    add_message "ei.MissionInfo" do
      optional :ship, :enum, 1, "ei.MissionInfo.Spaceship"
      optional :status, :enum, 2, "ei.MissionInfo.Status"
      optional :duration_type, :enum, 3, "ei.MissionInfo.DurationType"
      repeated :fuel, :message, 4, "ei.MissionInfo.Fuel"
      optional :level, :uint32, 12
      optional :duration_seconds, :double, 5
      optional :capacity, :uint32, 9
      optional :quality_bump, :double, 11
      optional :seconds_remaining, :double, 6
      optional :start_time_derived, :double, 8
      optional :mission_log, :string, 10
      optional :identifier, :string, 7
    end
    add_message "ei.MissionInfo.Fuel" do
      optional :egg, :enum, 1, "ei.Egg"
      optional :amount, :double, 2
    end
    add_enum "ei.MissionInfo.Spaceship" do
      value :CHICKEN_ONE, 0
      value :CHICKEN_NINE, 1
      value :CHICKEN_HEAVY, 2
      value :BCR, 3
      value :MILLENIUM_CHICKEN, 4
      value :CORELLIHEN_CORVETTE, 5
      value :GALEGGTICA, 6
      value :CHICKFIANT, 7
      value :VOYEGGER, 8
      value :HENERPRISE, 9
    end
    add_enum "ei.MissionInfo.Status" do
      value :FUELING, 0
      value :PREPARE_TO_LAUNCH, 5
      value :EXPLORING, 10
      value :RETURNED, 15
      value :ANALYZING, 16
      value :COMPLETE, 20
      value :ARCHIVED, 25
    end
    add_enum "ei.MissionInfo.DurationType" do
      value :SHORT, 0
      value :LONG, 1
      value :EPIC, 2
      value :TUTORIAL, 3
    end
    add_message "ei.ArtifactSpec" do
      optional :name, :enum, 1, "ei.ArtifactSpec.Name"
      optional :level, :enum, 2, "ei.ArtifactSpec.Level"
      optional :rarity, :enum, 3, "ei.ArtifactSpec.Rarity"
      optional :egg, :enum, 4, "ei.Egg"
    end
    add_enum "ei.ArtifactSpec.Name" do
      value :LUNAR_TOTEM, 0
      value :NEODYMIUM_MEDALLION, 3
      value :BEAK_OF_MIDAS, 4
      value :LIGHT_OF_EGGENDIL, 5
      value :DEMETERS_NECKLACE, 6
      value :VIAL_MARTIAN_DUST, 7
      value :ORNATE_GUSSET, 8
      value :THE_CHALICE, 9
      value :BOOK_OF_BASAN, 10
      value :PHOENIX_FEATHER, 11
      value :TUNGSTEN_ANKH, 12
      value :AURELIAN_BROOCH, 21
      value :CARVED_RAINSTICK, 22
      value :PUZZLE_CUBE, 23
      value :QUANTUM_METRONOME, 24
      value :SHIP_IN_A_BOTTLE, 25
      value :TACHYON_DEFLECTOR, 26
      value :INTERSTELLAR_COMPASS, 27
      value :DILITHIUM_MONOCLE, 28
      value :TITANIUM_ACTUATOR, 29
      value :MERCURYS_LENS, 30
      value :TACHYON_STONE, 1
      value :DILITHIUM_STONE, 31
      value :SHELL_STONE, 32
      value :LUNAR_STONE, 33
      value :SOUL_STONE, 34
      value :PROPHECY_STONE, 39
      value :QUANTUM_STONE, 36
      value :TERRA_STONE, 37
      value :LIFE_STONE, 38
      value :CLARITY_STONE, 40
      value :EXTRATERRESTRIAL_ALUMINUM, 13
      value :ANCIENT_TUNGSTEN, 14
      value :SPACE_ROCKS, 15
      value :ALIEN_WOOD, 16
      value :GOLD_METEORITE, 17
      value :TAU_CETI_GEODE, 18
      value :CENTAURIAN_STEEL, 19
      value :ERIDANI_FEATHER, 20
      value :DRONE_PARTS, 35
      value :CELESTIAL_BRONZE, 41
      value :LALANDE_HIDE, 42
      value :SOLAR_TITANIUM, 43
      value :TACHYON_STONE_FRAGMENT, 2
      value :DILITHIUM_STONE_FRAGMENT, 44
      value :SHELL_STONE_FRAGMENT, 45
      value :LUNAR_STONE_FRAGMENT, 46
      value :SOUL_STONE_FRAGMENT, 47
      value :PROPHECY_STONE_FRAGMENT, 48
      value :QUANTUM_STONE_FRAGMENT, 49
      value :TERRA_STONE_FRAGMENT, 50
      value :LIFE_STONE_FRAGMENT, 51
      value :CLARITY_STONE_FRAGMENT, 52
      value :UNKNOWN, 10000
    end
    add_enum "ei.ArtifactSpec.Level" do
      value :INFERIOR, 0
      value :LESSER, 1
      value :NORMAL, 2
      value :GREATER, 3
      value :SUPERIOR, 4
    end
    add_enum "ei.ArtifactSpec.Rarity" do
      value :COMMON, 0
      value :RARE, 1
      value :EPIC, 2
      value :LEGENDARY, 3
    end
    add_enum "ei.ArtifactSpec.Type" do
      value :ARTIFACT, 0
      value :STONE, 1
      value :INGREDIENT, 2
      value :STONE_INGREDIENT, 3
    end
    add_message "ei.CompleteArtifact" do
      optional :spec, :message, 1, "ei.ArtifactSpec"
      repeated :stones, :message, 2, "ei.ArtifactSpec"
    end
    add_message "ei.ArtifactInventoryItem" do
      optional :item_id, :uint64, 1
      optional :artifact, :message, 2, "ei.CompleteArtifact"
      optional :quantity, :double, 3
      optional :server_id, :string, 4
    end
    add_message "ei.InventorySlot" do
      optional :occupied, :bool, 1
      optional :item_id, :uint32, 2
    end
    add_message "ei.ArtifactsConfigurationRequest" do
      optional :rinfo, :message, 2, "ei.BasicRequestInfo"
      optional :client_version, :uint32, 1
    end
    add_message "ei.ArtifactsConfigurationResponse" do
      repeated :mission_parameters, :message, 1, "ei.ArtifactsConfigurationResponse.MissionParameters"
      repeated :artifact_parameters, :message, 2, "ei.ArtifactsConfigurationResponse.ArtifactParameters"
    end
    add_message "ei.ArtifactsConfigurationResponse.MissionParameters" do
      optional :ship, :enum, 1, "ei.MissionInfo.Spaceship"
      repeated :durations, :message, 3, "ei.ArtifactsConfigurationResponse.MissionParameters.Duration"
      repeated :level_mission_requirements, :uint32, 4
      optional :capacity_DEPRECATED, :uint32, 2
    end
    add_message "ei.ArtifactsConfigurationResponse.MissionParameters.Duration" do
      optional :duration_type, :enum, 1, "ei.MissionInfo.DurationType"
      optional :seconds, :double, 2
      optional :quality, :float, 3
      optional :min_quality, :float, 4
      optional :max_quality, :float, 5
      optional :capacity, :uint32, 6
      optional :level_capacity_bump, :uint32, 7
      optional :level_quality_bump, :float, 8
    end
    add_message "ei.ArtifactsConfigurationResponse.ArtifactParameters" do
      optional :spec, :message, 1, "ei.ArtifactSpec"
      optional :base_quality, :double, 2
      optional :odds_multiplier, :double, 4
      optional :value, :double, 3
      optional :crafting_price, :double, 5
      optional :crafting_price_low, :double, 6
      optional :crafting_price_domain, :uint32, 7
      optional :crafting_price_curve, :double, 8
    end
    add_message "ei.MissionRequest" do
      optional :rinfo, :message, 4, "ei.BasicRequestInfo"
      optional :client_version, :uint32, 1
      optional :ei_user_id, :string, 3
      optional :info, :message, 2, "ei.MissionInfo"
      optional :client_info, :message, 5, "ei.ArtifactsClientInfo"
    end
    add_message "ei.MissionResponse" do
      optional :success, :bool, 1
      optional :info, :message, 2, "ei.MissionInfo"
    end
    add_message "ei.CompleteMissionResponse" do
      optional :success, :bool, 1
      optional :info, :message, 2, "ei.MissionInfo"
      repeated :artifacts, :message, 3, "ei.CompleteMissionResponse.SecureArtifactSpec"
      repeated :other_rewards, :message, 4, "ei.Reward"
      optional :ei_user_id, :string, 5
    end
    add_message "ei.CompleteMissionResponse.SecureArtifactSpec" do
      optional :spec, :message, 1, "ei.ArtifactSpec"
      optional :server_id, :string, 2
    end
    add_message "ei.CollectContractArtifactRewardsRequest" do
      optional :rinfo, :message, 1, "ei.BasicRequestInfo"
      optional :contract_identifier, :string, 2
      optional :league, :uint32, 5
      optional :goal_index, :uint32, 3
      optional :best_ship, :enum, 4, "ei.MissionInfo.Spaceship"
    end
    add_message "ei.CraftArtifactRequest" do
      optional :rinfo, :message, 5, "ei.BasicRequestInfo"
      optional :ei_user_id, :string, 1
      optional :spec, :message, 2, "ei.ArtifactSpec"
      optional :item_id, :uint64, 3
      optional :gold_price_paid, :double, 6
      optional :crafting_count, :uint32, 7
      repeated :ingredients, :message, 4, "ei.ArtifactInventoryItem"
    end
    add_message "ei.CraftArtifactResponse" do
      optional :item_id, :uint64, 1
      optional :ei_user_id, :string, 5
      optional :rarity_achieved, :enum, 2, "ei.ArtifactSpec.Rarity", default: 0
      optional :server_id, :string, 3
    end
    add_message "ei.ConsumeArtifactRequest" do
      optional :rinfo, :message, 4, "ei.BasicRequestInfo"
      optional :ei_user_id, :string, 3
      optional :spec, :message, 1, "ei.ArtifactSpec"
      optional :artifact_server_id, :string, 5
      optional :original_item_id, :uint64, 2
      optional :quantity, :uint32, 6
    end
    add_message "ei.ConsumeArtifactResponse" do
      optional :success, :bool, 1
      optional :original_item_id, :uint64, 2
      repeated :byproducts, :message, 3, "ei.ArtifactSpec"
      repeated :other_rewards, :message, 4, "ei.Reward"
      optional :ei_user_id, :string, 5
    end
    add_message "ei.AuthenticateArtifactResponse" do
      optional :success, :bool, 1
      optional :original_item_id, :uint64, 2
      optional :demote, :bool, 3
      optional :delete, :bool, 4
      optional :ei_user_id, :string, 5
    end
    add_message "ei.SetArtifactRequest" do
      optional :rinfo, :message, 1, "ei.BasicRequestInfo"
      optional :artifact, :message, 2, "ei.ArtifactInventoryItem"
      repeated :stones, :message, 3, "ei.ArtifactSpec"
      optional :gold_price_paid, :double, 4
    end
    add_message "ei.SetArtifactResponse" do
      optional :success, :bool, 1
      optional :original_item_id, :uint64, 2
      optional :ei_user_id, :string, 5
    end
    add_message "ei.ArtifactsDB" do
      repeated :inventory_items, :message, 1, "ei.ArtifactInventoryItem"
      optional :item_sequence, :uint64, 2
      repeated :inventory_slots, :message, 3, "ei.InventorySlot"
      repeated :active_artifacts, :message, 7, "ei.ArtifactsDB.ActiveArtifactSlot"
      repeated :active_artifact_sets, :message, 11, "ei.ArtifactsDB.ActiveArtifactSet"
      repeated :discovered_artifacts, :message, 8, "ei.ArtifactSpec"
      repeated :craftable_artifacts, :message, 9, "ei.ArtifactsDB.CraftableArtifact"
      repeated :crafting_counts, :message, 10, "ei.ArtifactsDB.CraftableArtifact"
      repeated :mission_infos, :message, 4, "ei.MissionInfo"
      repeated :mission_archive, :message, 5, "ei.MissionInfo"
    end
    add_message "ei.ArtifactsDB.ActiveArtifactSlot" do
      optional :occupied, :bool, 1
      optional :item_id, :uint64, 2
    end
    add_message "ei.ArtifactsDB.ActiveArtifactSet" do
      repeated :slots, :message, 1, "ei.ArtifactsDB.ActiveArtifactSlot"
    end
    add_message "ei.ArtifactsDB.CraftableArtifact" do
      optional :spec, :message, 1, "ei.ArtifactSpec"
      optional :seen, :bool, 2
      optional :count, :uint32, 3
    end
    add_message "ei.AuthenticatedMessage" do
      optional :message, :bytes, 1
      optional :code, :string, 2
    end
    add_message "ei.LogCompleteMissionPayload" do
      optional :req, :message, 1, "ei.MissionRequest"
      optional :res, :message, 2, "ei.CompleteMissionResponse"
    end
    add_message "ei.LogCraftArtifactPayload" do
      optional :req, :message, 1, "ei.CraftArtifactRequest"
      optional :res, :message, 2, "ei.CraftArtifactResponse"
    end
    add_message "ei.LogConsumeArtifactPayload" do
      optional :req, :message, 1, "ei.ConsumeArtifactRequest"
      optional :res, :message, 2, "ei.ConsumeArtifactResponse"
    end
    add_message "ei.LogSetArtifactPayload" do
      optional :req, :message, 1, "ei.SetArtifactRequest"
      optional :res, :message, 2, "ei.SetArtifactResponse"
    end
    add_message "ei.AccountTransferPayload" do
      optional :from_id, :string, 1
      optional :to_ei_user_id, :string, 2
    end
    add_message "ei.SaveBackupResponse" do
      optional :success, :bool, 1
      optional :error_code, :uint32, 2
      optional :message, :string, 3
      optional :existing_backup, :message, 4, "ei.Backup"
    end
    add_enum "ei.SaveBackupResponse.ErrorCodes" do
      value :NO_ERROR, 0
      value :USER_NOT_FOUND, 1
      value :COULD_NOT_OVERWRITE, 2
      value :BACKUP_OFFERED, 3
      value :BAD_USER_ID, 4
    end
    add_message "ei.CleanAccountRequest" do
      optional :ei_user_id_to_keep, :string, 1
      optional :game_services_id, :string, 2
    end
    add_message "ei.ReturnEDTPayload" do
      optional :ei_user_id, :string, 1
    end
    add_message "ei.DLCItem" do
      optional :name, :string, 1
      optional :directory, :string, 2
      optional :ext, :string, 3
      optional :url, :string, 4
      optional :checksum, :string, 5
    end
    add_message "ei.ShellSpec" do
      optional :identifier, :string, 1
      optional :primary_piece, :message, 12, "ei.ShellSpec.ShellPiece"
      repeated :pieces, :message, 11, "ei.ShellSpec.ShellPiece"
      optional :name, :string, 3
      optional :set_identifier, :string, 13
      optional :price, :uint32, 4
      optional :required_eop, :uint32, 5
      optional :required_soul_eggs, :double, 6
      optional :default_appearance, :bool, 8
    end
    add_message "ei.ShellSpec.ShellPiece" do
      optional :asset_type, :enum, 1, "ei.ShellSpec.AssetType"
      optional :dlc, :message, 2, "ei.DLCItem"
    end
    add_enum "ei.ShellSpec.AssetType" do
      value :COOP, 1
      value :SHACK, 2
      value :SUPER_SHACK, 3
      value :SHORT_HOUSE, 4
      value :THE_STANDARD, 5
      value :LONG_HOUSE, 6
      value :DOUBLE_DECKER, 7
      value :WAREHOUSE, 8
      value :CENTER, 9
      value :BUNKER, 10
      value :EGGKEA, 11
      value :HAB_1K, 12
      value :HANGAR, 13
      value :TOWER, 14
      value :HAB_10K, 15
      value :EGGTOPIA, 16
      value :MONOLITH, 17
      value :PLANET_PORTAL, 18
      value :CHICKEN_UNIVERSE, 19
      value :SILO_0_SMALL, 50
      value :SILO_0_MED, 51
      value :SILO_0_LARGE, 52
      value :SILO_1_SMALL, 53
      value :SILO_1_MED, 54
      value :SILO_1_LARGE, 55
      value :SILO_ALL, 59
      value :MAILBOX, 70
      value :TROPHY_CASE, 71
      value :GROUND, 72
      value :HARDSCAPE, 73
      value :HYPERLOOP, 74
      value :DEPOT_1, 100
      value :DEPOT_2, 101
      value :DEPOT_3, 102
      value :DEPOT_4, 103
      value :DEPOT_5, 104
      value :DEPOT_6, 105
      value :DEPOT_7, 106
      value :LAB_1, 110
      value :LAB_2, 111
      value :LAB_3, 112
      value :LAB_4, 113
      value :LAB_5, 114
      value :LAB_6, 115
      value :HATCHERY_EDIBLE, 120
      value :HATCHERY_SUPERFOOD, 121
      value :HATCHERY_MEDICAL, 122
      value :HATCHERY_ROCKET_FUEL, 123
      value :HATCHERY_SUPERMATERIAL, 124
      value :HATCHERY_FUSION, 125
      value :HATCHERY_QUANTUM, 126
      value :HATCHERY_IMMORTALITY, 127
      value :HATCHERY_TACHYON, 128
      value :HATCHERY_GRAVITON, 129
      value :HATCHERY_DILITHIUM, 130
      value :HATCHERY_PRODIGY, 131
      value :HATCHERY_TERRAFORM, 132
      value :HATCHERY_ANTIMATTER, 133
      value :HATCHERY_DARK_MATTER, 134
      value :HATCHERY_AI, 135
      value :HATCHERY_NEBULA, 136
      value :HATCHERY_UNIVERSE, 137
      value :HATCHERY_ENLIGHTENMENT, 138
      value :HATCHERY_CHOCOLATE, 139
      value :HATCHERY_EASTER, 140
      value :HATCHERY_WATERBALLOON, 141
      value :HATCHERY_FIREWORK, 142
      value :HATCHERY_PUMPKIN, 143
      value :HOA_1, 170
      value :HOA_2, 171
      value :HOA_3, 172
      value :MISSION_CONTROL_1, 180
      value :MISSION_CONTROL_2, 181
      value :MISSION_CONTROL_3, 182
      value :HATCHERY_GRAVITON_TOP, 500
      value :HATCHERY_NEBULA_MIDDLE, 501
      value :HATCHERY_NEBULA_TOP, 502
      value :HATCHERY_DARK_MATTER_RING_1, 505
      value :HATCHERY_DARK_MATTER_RING_2, 506
      value :HATCHERY_DARK_MATTER_RING_3, 507
      value :HATCHERY_AI_TOP_1, 510
      value :HATCHERY_AI_TOP_2, 511
      value :HATCHERY_AI_TOP_3, 512
      value :HATCHERY_AI_TOP_4, 513
      value :HATCHERY_UNIVERSE_PROBE, 515
      value :HATCHERY_UNIVERSE_BOLT, 516
      value :HATCHERY_ENLIGHTENMENT_ORB, 520
      value :HYPERLOOP_TRACK, 570
      value :MAILBOX_FULL, 600
      value :UNKNOWN, 9999
    end
    add_message "ei.ShellSetSpec" do
      optional :identifier, :string, 1
      optional :name, :string, 2
      optional :price, :uint32, 3
      optional :required_eop, :uint32, 4
      optional :required_soul_eggs, :double, 5
    end
    add_message "ei.DLCCatalog" do
      repeated :items, :message, 1, "ei.DLCItem"
      repeated :shells, :message, 2, "ei.ShellSpec"
      repeated :shell_sets, :message, 3, "ei.ShellSetSpec"
    end
    add_message "ei.ShellDB" do
      repeated :shell_inventory, :message, 1, "ei.ShellDB.ShellStatus"
      repeated :farm_configs, :message, 3, "ei.ShellDB.FarmConfiguration"
    end
    add_message "ei.ShellDB.ShellStatus" do
      optional :shell_identifier, :string, 1
      optional :owned, :bool, 2
    end
    add_message "ei.ShellDB.FarmConfiguration" do
      repeated :shell_configs, :message, 1, "ei.ShellDB.ShellConfiguration"
    end
    add_message "ei.ShellDB.ShellConfiguration" do
      optional :asset_type, :enum, 1, "ei.ShellSpec.AssetType"
      optional :index, :uint32, 2
      optional :shell_identifier, :string, 3
    end
    add_enum "ei.Platform" do
      value :IOS, 1
      value :DROID, 2
    end
    add_enum "ei.DeviceFormFactor" do
      value :PHONE, 1
      value :TABLET, 2
    end
    add_enum "ei.AdNetwork" do
      value :VUNGLE, 0
      value :CHARTBOOST, 1
      value :AD_COLONY, 2
      value :HYPER_MX, 3
      value :UNITY, 4
      value :FACEBOOK, 5
      value :APPLOVIN, 6
    end
    add_enum "ei.Egg" do
      value :EDIBLE, 1
      value :SUPERFOOD, 2
      value :MEDICAL, 3
      value :ROCKET_FUEL, 4
      value :SUPER_MATERIAL, 5
      value :FUSION, 6
      value :QUANTUM, 7
      value :IMMORTALITY, 8
      value :TACHYON, 9
      value :GRAVITON, 10
      value :DILITHIUM, 11
      value :PRODIGY, 12
      value :TERRAFORM, 13
      value :ANTIMATTER, 14
      value :DARK_MATTER, 15
      value :AI, 16
      value :NEBULA, 17
      value :UNIVERSE, 18
      value :ENLIGHTENMENT, 19
      value :CHOCOLATE, 100
      value :EASTER, 101
      value :WATERBALLOON, 102
      value :FIREWORK, 103
      value :PUMPKIN, 104
      value :UNKNOWN, 1000
    end
    add_enum "ei.FarmType" do
      value :EMPTY, 1
      value :HOME, 2
      value :CONTRACT, 3
    end
    add_enum "ei.GoalType" do
      value :EGGS_LAID, 1
      value :UNKNOWN_GOAL, 100
    end
    add_enum "ei.RewardType" do
      value :CASH, 1
      value :GOLD, 2
      value :SOUL_EGGS, 3
      value :EGGS_OF_PROPHECY, 4
      value :EPIC_RESEARCH_ITEM, 5
      value :PIGGY_FILL, 6
      value :PIGGY_MULTIPLIER, 7
      value :PIGGY_LEVEL_BUMP, 8
      value :BOOST, 9
      value :BOOST_TOKEN, 10
      value :ARTIFACT, 11
      value :ARTIFACT_CASE, 12
      value :UNKNOWN_REWARD, 100
    end
  end
end

module Ei
  Backup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup").msgclass
  Backup::Settings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.Settings").msgclass
  Backup::Tutorial = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.Tutorial").msgclass
  Backup::Stats = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.Stats").msgclass
  Backup::Game = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.Game").msgclass
  Backup::Artifacts = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.Artifacts").msgclass
  Backup::Simulation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.Simulation").msgclass
  Backup::Mission = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.Mission").msgclass
  Backup::Misc = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.Misc").msgclass
  Backup::ResearchItem = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.ResearchItem").msgclass
  Backup::NewsHeadline = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.NewsHeadline").msgclass
  Backup::AchievementInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.AchievementInfo").msgclass
  Backup::ActiveBoost = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.ActiveBoost").msgclass
  Backup::OwnedBoost = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.OwnedBoost").msgclass
  Backup::MissionInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Backup.MissionInfo").msgclass
  EggIncFirstContactRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.EggIncFirstContactRequest").msgclass
  EggIncFirstContactResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.EggIncFirstContactResponse").msgclass
  EggIncFirstContactResponse::ErrorCodes = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.EggIncFirstContactResponse.ErrorCodes").enummodule
  EggIncAdConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.EggIncAdConfig").msgclass
  DailyGiftInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.DailyGiftInfo").msgclass
  SalesInfoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.SalesInfoRequest").msgclass
  IAPSaleEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.IAPSaleEntry").msgclass
  SalesInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.SalesInfo").msgclass
  EggIncEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.EggIncEvent").msgclass
  EggIncCurrentEvents = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.EggIncCurrentEvents").msgclass
  DeviceInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.DeviceInfo").msgclass
  AppInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AppInfo").msgclass
  ActionKeyValuePair = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ActionKeyValuePair").msgclass
  GenericAction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.GenericAction").msgclass
  VerifyPurchaseRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.VerifyPurchaseRequest").msgclass
  VerifyPurchaseResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.VerifyPurchaseResponse").msgclass
  Reward = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Reward").msgclass
  Contract = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Contract").msgclass
  Contract::Goal = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Contract.Goal").msgclass
  Contract::GoalSet = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Contract.GoalSet").msgclass
  BasicRequestInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.BasicRequestInfo").msgclass
  ContractsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractsRequest").msgclass
  ContractsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractsResponse").msgclass
  ContractCoopStatusRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractCoopStatusRequest").msgclass
  FarmProductionParams = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.FarmProductionParams").msgclass
  ContractCoopStatusResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractCoopStatusResponse").msgclass
  ContractCoopStatusResponse::ContributionInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractCoopStatusResponse.ContributionInfo").msgclass
  ContractCoopStatusResponse::CoopGift = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractCoopStatusResponse.CoopGift").msgclass
  ContractCoopStatusResponse::MemberStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractCoopStatusResponse.MemberStatus").enummodule
  LocalContract = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LocalContract").msgclass
  MyContracts = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MyContracts").msgclass
  QueryCoopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.QueryCoopRequest").msgclass
  QueryCoopResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.QueryCoopResponse").msgclass
  CreateCoopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CreateCoopRequest").msgclass
  CreateCoopResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CreateCoopResponse").msgclass
  JoinCoopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.JoinCoopRequest").msgclass
  JoinCoopResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.JoinCoopResponse").msgclass
  AutoJoinCoopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AutoJoinCoopRequest").msgclass
  UpdateCoopPermissionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.UpdateCoopPermissionsRequest").msgclass
  UpdateCoopPermissionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.UpdateCoopPermissionsResponse").msgclass
  LeaveCoopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LeaveCoopRequest").msgclass
  GiftPlayerCoopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.GiftPlayerCoopRequest").msgclass
  KickPlayerCoopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.KickPlayerCoopRequest").msgclass
  KickPlayerCoopRequest::Reason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.KickPlayerCoopRequest.Reason").enummodule
  ContractCoopStatusUpdateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractCoopStatusUpdateRequest").msgclass
  ContractCoopStatusUpdateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ContractCoopStatusUpdateResponse").msgclass
  CoopBuffState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CoopBuffState").msgclass
  CoopBuffHistory = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CoopBuffHistory").msgclass
  UserDataInfoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.UserDataInfoRequest").msgclass
  UserDataInfoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.UserDataInfoResponse").msgclass
  ClearAllUserDataRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ClearAllUserDataRequest").msgclass
  ServerGift = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ServerGift").msgclass
  LiveConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LiveConfig").msgclass
  LiveConfig::BoostsConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LiveConfig.BoostsConfig").msgclass
  LiveConfig::BoostsConfig::ItemConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LiveConfig.BoostsConfig.ItemConfig").msgclass
  LiveConfig::GiftConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LiveConfig.GiftConfig").msgclass
  LiveConfig::GiftConfig::GiftValueConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LiveConfig.GiftConfig.GiftValueConfig").msgclass
  LiveConfig::GiftConfig::GiftMuConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LiveConfig.GiftConfig.GiftMuConfig").msgclass
  LiveConfig::MiscConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LiveConfig.MiscConfig").msgclass
  InGameMail = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.InGameMail").msgclass
  MailDB = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MailDB").msgclass
  PeriodicalsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.PeriodicalsResponse").msgclass
  GetPeriodicalsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.GetPeriodicalsRequest").msgclass
  ConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ConfigRequest").msgclass
  ConfigResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ConfigResponse").msgclass
  AdAttributionRawData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AdAttributionRawData").msgclass
  AdAttributionRow = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AdAttributionRow").msgclass
  AdAttributionInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AdAttributionInfo").msgclass
  ArtifactsClientInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsClientInfo").msgclass
  ArtifactsClientInfo::LaunchCount = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsClientInfo.LaunchCount").msgclass
  MissionInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MissionInfo").msgclass
  MissionInfo::Fuel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MissionInfo.Fuel").msgclass
  MissionInfo::Spaceship = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MissionInfo.Spaceship").enummodule
  MissionInfo::Status = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MissionInfo.Status").enummodule
  MissionInfo::DurationType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MissionInfo.DurationType").enummodule
  ArtifactSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactSpec").msgclass
  ArtifactSpec::Name = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactSpec.Name").enummodule
  ArtifactSpec::Level = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactSpec.Level").enummodule
  ArtifactSpec::Rarity = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactSpec.Rarity").enummodule
  ArtifactSpec::Type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactSpec.Type").enummodule
  CompleteArtifact = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CompleteArtifact").msgclass
  ArtifactInventoryItem = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactInventoryItem").msgclass
  InventorySlot = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.InventorySlot").msgclass
  ArtifactsConfigurationRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsConfigurationRequest").msgclass
  ArtifactsConfigurationResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsConfigurationResponse").msgclass
  ArtifactsConfigurationResponse::MissionParameters = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsConfigurationResponse.MissionParameters").msgclass
  ArtifactsConfigurationResponse::MissionParameters::Duration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsConfigurationResponse.MissionParameters.Duration").msgclass
  ArtifactsConfigurationResponse::ArtifactParameters = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsConfigurationResponse.ArtifactParameters").msgclass
  MissionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MissionRequest").msgclass
  MissionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.MissionResponse").msgclass
  CompleteMissionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CompleteMissionResponse").msgclass
  CompleteMissionResponse::SecureArtifactSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CompleteMissionResponse.SecureArtifactSpec").msgclass
  CollectContractArtifactRewardsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CollectContractArtifactRewardsRequest").msgclass
  CraftArtifactRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CraftArtifactRequest").msgclass
  CraftArtifactResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CraftArtifactResponse").msgclass
  ConsumeArtifactRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ConsumeArtifactRequest").msgclass
  ConsumeArtifactResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ConsumeArtifactResponse").msgclass
  AuthenticateArtifactResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AuthenticateArtifactResponse").msgclass
  SetArtifactRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.SetArtifactRequest").msgclass
  SetArtifactResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.SetArtifactResponse").msgclass
  ArtifactsDB = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsDB").msgclass
  ArtifactsDB::ActiveArtifactSlot = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsDB.ActiveArtifactSlot").msgclass
  ArtifactsDB::ActiveArtifactSet = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsDB.ActiveArtifactSet").msgclass
  ArtifactsDB::CraftableArtifact = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ArtifactsDB.CraftableArtifact").msgclass
  AuthenticatedMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AuthenticatedMessage").msgclass
  LogCompleteMissionPayload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LogCompleteMissionPayload").msgclass
  LogCraftArtifactPayload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LogCraftArtifactPayload").msgclass
  LogConsumeArtifactPayload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LogConsumeArtifactPayload").msgclass
  LogSetArtifactPayload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.LogSetArtifactPayload").msgclass
  AccountTransferPayload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AccountTransferPayload").msgclass
  SaveBackupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.SaveBackupResponse").msgclass
  SaveBackupResponse::ErrorCodes = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.SaveBackupResponse.ErrorCodes").enummodule
  CleanAccountRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.CleanAccountRequest").msgclass
  ReturnEDTPayload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ReturnEDTPayload").msgclass
  DLCItem = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.DLCItem").msgclass
  ShellSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ShellSpec").msgclass
  ShellSpec::ShellPiece = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ShellSpec.ShellPiece").msgclass
  ShellSpec::AssetType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ShellSpec.AssetType").enummodule
  ShellSetSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ShellSetSpec").msgclass
  DLCCatalog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.DLCCatalog").msgclass
  ShellDB = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ShellDB").msgclass
  ShellDB::ShellStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ShellDB.ShellStatus").msgclass
  ShellDB::FarmConfiguration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ShellDB.FarmConfiguration").msgclass
  ShellDB::ShellConfiguration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.ShellDB.ShellConfiguration").msgclass
  Platform = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Platform").enummodule
  DeviceFormFactor = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.DeviceFormFactor").enummodule
  AdNetwork = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.AdNetwork").enummodule
  Egg = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.Egg").enummodule
  FarmType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.FarmType").enummodule
  GoalType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.GoalType").enummodule
  RewardType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ei.RewardType").enummodule
end
