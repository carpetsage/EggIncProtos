// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.ShellDB');
goog.provide('proto.ei.ShellDB.FarmConfiguration');
goog.provide('proto.ei.ShellDB.ShellConfiguration');
goog.provide('proto.ei.ShellDB.ShellStatus');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.ei.ShellSpec.AssetType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellDB.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellDB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.displayName = 'proto.ei.ShellDB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellStatus.displayName = 'proto.ei.ShellDB.ShellStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.FarmConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellDB.FarmConfiguration.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellDB.FarmConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.FarmConfiguration.displayName = 'proto.ei.ShellDB.FarmConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellDB.ShellConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellDB.ShellConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellDB.ShellConfiguration.displayName = 'proto.ei.ShellDB.ShellConfiguration';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellDB.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.toObject = function(includeInstance, msg) {
  var f, obj = {
    shellInventoryList: jspb.Message.toObjectList(msg.getShellInventoryList(),
    proto.ei.ShellDB.ShellStatus.toObject, includeInstance),
    farmConfigsList: jspb.Message.toObjectList(msg.getFarmConfigsList(),
    proto.ei.ShellDB.FarmConfiguration.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB}
 */
proto.ei.ShellDB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB;
  return proto.ei.ShellDB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB}
 */
proto.ei.ShellDB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ShellDB.ShellStatus;
      reader.readMessage(value,proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader);
      msg.addShellInventory(value);
      break;
    case 3:
      var value = new proto.ei.ShellDB.FarmConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader);
      msg.addFarmConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShellInventoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter
    );
  }
  f = message.getFarmConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    shellIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    owned: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.ShellStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellStatus;
  return proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.ShellStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShellIdentifier(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOwned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string shell_identifier = 1;
 * @return {string}
 */
proto.ei.ShellDB.ShellStatus.prototype.getShellIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.setShellIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.clearShellIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.hasShellIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool owned = 2;
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.getOwned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.setOwned = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellStatus} returns this
 */
proto.ei.ShellDB.ShellStatus.prototype.clearOwned = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellStatus.prototype.hasOwned = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellDB.FarmConfiguration.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.FarmConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.FarmConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.FarmConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    shellConfigsList: jspb.Message.toObjectList(msg.getShellConfigsList(),
    proto.ei.ShellDB.ShellConfiguration.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.FarmConfiguration;
  return proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.FarmConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ShellDB.ShellConfiguration;
      reader.readMessage(value,proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader);
      msg.addShellConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.FarmConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.FarmConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShellConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ShellConfiguration shell_configs = 1;
 * @return {!Array<!proto.ei.ShellDB.ShellConfiguration>}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.getShellConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellConfiguration, 1));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellConfiguration>} value
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
*/
proto.ei.ShellDB.FarmConfiguration.prototype.setShellConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.FarmConfiguration.prototype.addShellConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellDB.ShellConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB.FarmConfiguration} returns this
 */
proto.ei.ShellDB.FarmConfiguration.prototype.clearShellConfigsList = function() {
  return this.setShellConfigsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellDB.ShellConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellDB.ShellConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    index: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    shellIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.ShellConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellDB.ShellConfiguration;
  return proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellDB.ShellConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellDB.ShellConfiguration}
 */
proto.ei.ShellDB.ShellConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShellIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellDB.ShellConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellDB.ShellConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ShellSpec.AssetType asset_type = 1;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string shell_identifier = 3;
 * @return {string}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.getShellIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.setShellIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellDB.ShellConfiguration} returns this
 */
proto.ei.ShellDB.ShellConfiguration.prototype.clearShellIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellDB.ShellConfiguration.prototype.hasShellIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ShellStatus shell_inventory = 1;
 * @return {!Array<!proto.ei.ShellDB.ShellStatus>}
 */
proto.ei.ShellDB.prototype.getShellInventoryList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.ShellStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.ShellStatus, 1));
};


/**
 * @param {!Array<!proto.ei.ShellDB.ShellStatus>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setShellInventoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ShellDB.ShellStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.ShellStatus}
 */
proto.ei.ShellDB.prototype.addShellInventory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ShellDB.ShellStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearShellInventoryList = function() {
  return this.setShellInventoryList([]);
};


/**
 * repeated FarmConfiguration farm_configs = 3;
 * @return {!Array<!proto.ei.ShellDB.FarmConfiguration>}
 */
proto.ei.ShellDB.prototype.getFarmConfigsList = function() {
  return /** @type{!Array<!proto.ei.ShellDB.FarmConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellDB.FarmConfiguration, 3));
};


/**
 * @param {!Array<!proto.ei.ShellDB.FarmConfiguration>} value
 * @return {!proto.ei.ShellDB} returns this
*/
proto.ei.ShellDB.prototype.setFarmConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ShellDB.FarmConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellDB.FarmConfiguration}
 */
proto.ei.ShellDB.prototype.addFarmConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ShellDB.FarmConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellDB} returns this
 */
proto.ei.ShellDB.prototype.clearFarmConfigsList = function() {
  return this.setFarmConfigsList([]);
};


