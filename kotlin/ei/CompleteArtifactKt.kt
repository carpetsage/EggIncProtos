//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ei.proto

package ei;

@kotlin.jvm.JvmSynthetic
public inline fun completeArtifact(block: ei.CompleteArtifactKt.Dsl.() -> kotlin.Unit): ei.Ei.CompleteArtifact =
  ei.CompleteArtifactKt.Dsl._create(ei.Ei.CompleteArtifact.newBuilder()).apply { block() }._build()
public object CompleteArtifactKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.CompleteArtifact.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.CompleteArtifact.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ei.Ei.CompleteArtifact = _builder.build()

    /**
     * <code>optional .ei.ArtifactSpec spec = 1;</code>
     */
    public var spec: ei.Ei.ArtifactSpec
      @JvmName("getSpec")
      get() = _builder.getSpec()
      @JvmName("setSpec")
      set(value) {
        _builder.setSpec(value)
      }
    /**
     * <code>optional .ei.ArtifactSpec spec = 1;</code>
     */
    public fun clearSpec() {
      _builder.clearSpec()
    }
    /**
     * <code>optional .ei.ArtifactSpec spec = 1;</code>
     * @return Whether the spec field is set.
     */
    public fun hasSpec(): kotlin.Boolean {
      return _builder.hasSpec()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class StonesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ei.ArtifactSpec stones = 2;</code>
     */
     public val stones: com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getStonesList()
      )
    /**
     * <code>repeated .ei.ArtifactSpec stones = 2;</code>
     * @param value The stones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addStones")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.add(value: ei.Ei.ArtifactSpec) {
      _builder.addStones(value)
    }/**
     * <code>repeated .ei.ArtifactSpec stones = 2;</code>
     * @param value The stones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignStones")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.plusAssign(value: ei.Ei.ArtifactSpec) {
      add(value)
    }/**
     * <code>repeated .ei.ArtifactSpec stones = 2;</code>
     * @param values The stones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllStones")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ArtifactSpec>) {
      _builder.addAllStones(values)
    }/**
     * <code>repeated .ei.ArtifactSpec stones = 2;</code>
     * @param values The stones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllStones")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ArtifactSpec>) {
      addAll(values)
    }/**
     * <code>repeated .ei.ArtifactSpec stones = 2;</code>
     * @param index The index to set the value at.
     * @param value The stones to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setStones")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.set(index: kotlin.Int, value: ei.Ei.ArtifactSpec) {
      _builder.setStones(index, value)
    }/**
     * <code>repeated .ei.ArtifactSpec stones = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearStones")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.clear() {
      _builder.clearStones()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CompleteArtifact.copy(block: ei.CompleteArtifactKt.Dsl.() -> kotlin.Unit): ei.Ei.CompleteArtifact =
  ei.CompleteArtifactKt.Dsl._create(this.toBuilder()).apply { block() }._build()
